

# Introduction {#intro}


![](assets/images/arch/staircase-274614_1920.jpg)

A> ***IN THIS SECTION, YOU WILL:** Understand what this playbook is about and how to use it.*
A>

{pagebreak}

A> ***KEY POINTS:***
A>
A> * *This playbook aims to share my approach to running an IT architecture practice in larger organizations based on my experience as Chief Architect at AVIV Group, eBay Classifieds, and Adevinta.*
A> * *I called this approach "Grounded Architecture," highlighting the need for any IT architecture function to stay well-connected to all levels of an organization and led by data.*
A> * *I also explain my motivation to write this playbook.*



In recent years, we have witnessed several shifts in the role of IT architects. IT architects' role has changed, and Gregor Hohpe's book, The [Software Architect Elevator](https://architectelevator.com/book/), highlights this shift. The book emphasizes the importance of the architect's ability to bridge the gap between high-level decision-making and low-level technical implementation. Hohpe compares the architect's role to an elevator, moving between different levels of the organization and translating goals and requirements between business executives and technical developers.

While there is significant consensus about the Software Architecture vision, there are very few practical guidelines about how to do it in practice. How to define new roles closer to a modern view of architecture? How to form teams? What tools to use or build? How do we grow and develop architects?

To answer these questions, the only way forward, in my view,  is to share lessons we learned while applying the ideas in practice on complex projects. Even if limited in scope, such studies of our peers have much more value for practitioners than abstract debates or academic analyses.

With this playbook, I want to share critical lessons I learned from implementing Software Architecture Elevator ideas in practice. More specifically, I will describe an approach to applying the concepts of Software Architecture Elevator vision to running an IT architecture practice in complex organizations, which I call "Grounded Architecture." I used the term "Grounded Architecture" to highlight the need for any IT architecture function to stay well-connected to all levels of an organization and led by data. This playbook aims to share my approach to running an IT architecture practice in larger organizations based on my experience as Chief Architect at AVIV Group, eBay Classifieds, and Adevinta.





Grounded Architecture has two main parts:
* **Structure**, elements you need to create in an organization to run Grounded Architecture practice and "ride" an architecture elevator, and
* **Reflections**, a set of my considerations and guiding principles that can help put the ideas of Grounded Architecture into practice.

The figure bellow shows the structure of the Grounded Architecture consisting of three elements:
* [Data Pillar](#data),
* [People Pillar](#people),
* [Architecture Activities Platform](#activities-platform).

![](assets/images/model.png)

The *[Data Pillar](#data)* ensures that architects' decisions are data-informed, based on an up-to-date and complete overview of the organization's technology landscape.

The *[People Pillar](#people)* represents a strong network of people doing architecture across the organization that is crucial to ensure that architecture function has any tangible impact.

Lastly, the *[Architecture Activities Platform](#activities-platform)* defines a set of processes and agreements enabling architects to do everything architecture typically does, leveraging data and people pillars to create a data-informed, organization-wide impact.

As a part of my work on Grounded Architecture, I also provide key lessons I learned while developing ideas of Grounded Architecture in practice, grouped into two parts:

* [Being an Architect](#being-architect):
  * [Architects as Superglue](#superglue)
  * [Skills](#skills)
  * [Impact](#impact)
  * [Leadership](#leadership)
  * [Architects' Career Paths](#career)
* [Doing Architecture](#doing-architecture):
  * [Culture Map: Architects' Culture Mindfield Compass](#culture-map)
  * [Managing Organization Complexity: Six Simple Rules](#six-simple-rules)
  * [In the Eye of the Storm: Aligning Business, Product, Technology and Organization Strategies](#storm)
  * [Product Development and The Build Trap](#product-development)
  * [Architecture Governance: Mandates, Taxation, Nudge](#flexible-governance)
  * [Economic Modeling: ROI and Financial Options](#economics)

The rest of this site will explain in detail the grounded architecture approach. In this section, I want to tell a few things about my motivation to write this playbook.


## A Bit of Personal History

The work presented in this playbook builds on several years of my experience. Most of this work results from my current work as a Chief Architect at AVIV Group and previous works as a Principal Architect for eBay Classifieds and Adevinta.

Another vital part of my experience that shaped this playbook was my earlier experience as a consultant and analyst at the Software Improvement Group. I've learned the value and pragmatics of data-informed decision-making. As a spin-off of this work, I've also built a tool called [Sokrates](sokrates.dev), which enable efficient and pragmatic extraction of data about technology and organization from source code. This work has directly influenced my view on the architecture [data pillar](#data).

My experience as a CTO of [Incision](https://incision.care), a startup, has helped me better understand the difficulties and pragmatics of creating and running an IT organization.

Lastly, my experience as a researcher at [Dutch Center for Computer Science and Mathematics (CWI)](https://www.cwi.nl/en/) and [Eindhoven Technical University (TU/e)](https://www.tue.nl/en/) provided me with a valuable background to do rigorous data analyses and research. From this research period, I want to highlight a collection of essays [Design Instability](https://design-instability.com/) I co-authored with Erik Stolterman, where we connected experiences of designing/architecting in three disciplines: classical design, UX design, and software engineering. This work has helped me better relate to and learn from non-technical fields necessary for architecture work.


## Why This Playbook?

This playbook generalizes my experiences in a written form. I have written these articles for two reasons. Firstly, the act of writing helps me to clarify and improve my ideas (Figure 1). As Gregor Hohpe once noted, I free up some brain cells to learn new things with every sentence I write. As nicely described by Hohpe written word has distinct advantages over the spoken word:

* it scales: you can address a broad audience without gathering them all in one (virtual) room at the same time
* it's fast to process: people read 2-3 times faster than they can listen
* it can be easily searched or versioned.


![](assets/images/writing.png)
***Figure 1:** Writing a book helped me organize ideas, obtain new insights, improve principles and tools, and share the lessons learned.*

Second, by generalizing and putting my experiences on paper, I hope to create more usable materials to help others in similar situations. I also expect helpful feedback from a broader community by sharing these materials.

## A Part of the Bigger Picture: A Trilogy in Four Parts

This book is a part of the [collection of open-source tools and resources](https://obren.io/) I have built in the past ten years to help me in architectural work (Figure 2).

![](assets/images/arch/obren_io_vertical.png)
***Figure 2:** Grounded Architecture is a part of the collection of open-source tools and resources I have built in the past ten years to help me in architectural work.*

The other resources include:

* [**Sokrates**](https://sokrates.dev): is an open-source source code analysis tool that implements my vision of documenting and analyzing software architectures of complex systems. Sokrates provides a pragmatic, inexpensive way to extract rich data from source code repositories—no need for lengthy interviews and workshops. Just bring the code. Sokrates can help you understand your code by making the size, complexity, and coupling of software and all people interactions and team topologies visible.
* [**Productivity Tools**](https://obren.io/tools): for years I have been building simple personal productivity tools.
* [**359° Overview of Tech Trends**](https://www.obren359.com/) is my collection of knowledge resources with the most recent articles, podcasts, and videos from over 20 authoritative, high-quality sources (IEEE, ACM, GOTO Conf, SE Radio, Martin Fowler's site, Ph.D. Theses). Architects need to learn fast, and finding good knowledge sources is difficult.

You can find more details about these tools at my homepage **[obren.io](https://obren.io/)**.

## Who Should Read This Playbook?

When writing this playbook, I had a broad audience in my mind. The article should be helpful to both technical and non-technical people. The report can help software engineers and architects understand their value and place in a broader organization. I also hope the articles show the less-technical audience the benefits of staying close to and well-connected with the technologists.


## The Structure of the Site

I have organized the playbook into several main parts. In this introductory part, I have described the context in which my ideas have developed. 

In the second part, I discuss the Grounded Architecture approach describing its three elements: the data pillar, the people pillar, and the technology Architecture Activities Platform. 

In the third part, I talk about the Reflections of Grounded Architecture, grouped int to sections: Being Architect and Doing Architecture. 

I conclude with a summary and pointers to external resources for those who want to explore more.

## Influences

Gregor Hohpe's [Architecture Elevator](https://architectelevator.com/) view of architecture has heavily inspired my work. 

I use Staff Engineering roles as an inspiration for the development of architects. Tanya Reilly's
book [The Staff Engineer's Path](https://www.oreilly.com/library/view/the-staff-engineers/9781098118723/) and Will
Larson's book [Staff Engineer: Leadership beyond the management track](https://staffeng.com/guides/staff-archetypes/)
are a helpful guide in defining the responsibilities of architects.

The [bookshelf](bookshelf) section shows many other books and resources that have influenced my approach and ideas. 


## Acknowledgments

Thank all eBay Classifieds Virtual Architecture Team (VAT) members and AVIV Group's Architecture Center of Excellence members who gave me invaluable feedback and discussions. Lastly, thank Peter Maas and Brent McLean for sponsoring and pushing for developing data-informed architecture in our organizations.


## Questions to Consider

* *Are you applying the Software Architecture Elevator vision in your work? How?*
* *Do you use data in your daily decision-making processes?*
* *Which tools do you use for architectural work?*
* *Do you share lessons you learn in your work with peers from other companies? Where?*
* *Is your view of career development in architect engineering biased? Which resources do you use?*

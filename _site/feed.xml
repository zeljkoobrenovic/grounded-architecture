<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-07-23T13:44:31+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Grounded Architecture: Redefining IT Architecture Practice</title><subtitle></subtitle><entry><title type="html">Building Data Foundation Website: Lean Design Patterns and Techniques</title><link href="http://localhost:4000/data-website" rel="alternate" type="text/html" title="Building Data Foundation Website: Lean Design Patterns and Techniques" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/appendix-data-website-techniques</id><content type="html" xml:base="http://localhost:4000/data-website"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/education-6241609_1280.png" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/jozefm84-10215106/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=6241609">Jozef Mikulcik</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=6241609">Pixabay</a>
</div>
<style>
    h1 {
        font-size: 210%;
    }
</style>

<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>Get a few practical tips on building lean architecture dashboards and documents (e.g., to create the data foundation) using simple, widely available tools.</p>
</blockquote>

<p><br />
While the lessons in this book are not limited to specific technologies and tools, I will share a few of my secrets for easily and affordably creating dashboards and documents that are crucial for data-informed decision-making.</p>

<p>Have you ever felt overwhelmed by the many specialized tools for creating architectural artifacts? Fear not! I’m here to show you that simplicity is often the key to brilliance. Imagine crafting high-quality documentation and stunning visualizations without complex software or extensive training. Not only is it possible, but it’s also incredibly efficient.</p>

<p>In this guide, I’ll explore the power of leveraging simple, lean tools that are widely available and easy to use. You don’t need to be a tech wizard to create impressive <a href="data">Data Foundation</a> dashboards and architectural documents. I hope you will find these techniques refreshingly straightforward and efficient.</p>

<p>Here are two examples to illustrate the power of simplicity:</p>

<ul>
  <li>I’ve developed several plain <a href="https://zeljkoobrenovic.github.io/grounded-architecture-dashboard-examples/apps/docs/index.html">HTML/CSS/DOM templates</a> (with <a href="https://github.com/zeljkoobrenovic/grounded-architecture-dashboard-examples">open-source code</a>) that I leverage in my daily work, and you can use for free yourself.</li>
  <li><a href="https://sokrates.dev">Sokrates.dev</a>, a tool I developed, generates all reports in plain old HTML without any special libraries. Check out the example of the Apache Foundation <a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/index.html">source code landscape</a>.</li>
</ul>

<p>These documents work on any browser, can be hosted on any simple HTTP server, and can be opened directly on any laptop or PC. They are also easy to maintain since no complex frameworks are used.</p>

<p>So, grab your digital toolkit and join us on this exciting journey. We’ll harness the power of everyday tools to create extraordinary results. Get ready to transform your architectural documentation process and discover the magic of simplicity!</p>

<p><br /></p>
<h2 id="implementation-principles">Implementation Principles</h2>

<p>When setting out on any journey, it’s having a clear set of principles is vital to guide you. These principles are your trusty map and compass, ensuring you navigate the architectural landscape efficiently and effectively. Here are the fundamental principles that will keep you on track:</p>

<ul>
  <li><strong>Leverage Existing Infrastructure</strong>: Why reinvent the wheel when you can turbocharge what you already have? Utilizing existing infrastructure saves time and resources.</li>
  <li><strong>Maintainable by a Small Architecture Team</strong>: Keep it simple! The architecture team normally does not have much time to polish self-created tools.</li>
  <li><strong>Broad Access Inside Organization</strong>: Everyone should have a ticket to the show. Broad access ensures that all stakeholders can engage and contribute.</li>
</ul>

<p><br /></p>
<h2 id="lean-implementation-techniques">Lean Implementation Techniques</h2>

<p>Here are a few techniques I leverage in my work.</p>

<h3 id="visualization-with-plain-old-htmlcssdom">Visualization With Plain Old HTML/CSS/DOM</h3>

<p>Who says you need a high-tech toolbox to create dazzling visuals? Sometimes, sticking with the basics can yield the most elegant and practical results. Embrace the simplicity and power of plain old HTML, CSS, and the DOM.</p>

<p>Earlier, I always used heavyweight visualization and UI frameworks to build interactive tools. But nowadays, I leave the heavy frameworks at the door. You can create beautiful, functional interfaces with just the basics—no React, Angular, or Vue here – just pure, unadulterated HTML and CSS magic.</p>

<p><img src="assets/images/data_site_simple_html.png" alt="" />
<em><strong>Figure 1:</strong> Simple generated HTML visual of source code analysis results.</em></p>

<p><br /></p>
<h3 id="embedding-json-in-html-documents">Embedding JSON in HTML Documents</h3>

<p>Most of the documents I create are data-driven. This approach means that I generate visuals using templates based on structured data. For my tools, I primarily export data in JSON format and embed it into a copy of an HTML template. JSON is the lifeblood of these data-driven applications. I can dynamically display data by insode HTML documents. This method makes the documents more portable and ensures you can open and view them on various devices.</p>

<h3 id="simple-proven-html-based-2d--3d-visuals">Simple Proven HTML-Based 2D &amp; 3D Visuals</h3>

<p>Let’s talk visuals. Here are some simple, proven methods I always use (you can find HTML templates of these visuals <a href="https://github.com/zeljkoobrenovic/grounded-architecture-dashboard-examples/tree/main/template/templates/visuals">here</a>):</p>

<ul>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/activemq/_sokrates_landscape/index.html">Bar Charts</a></strong>: Classic and practical, perfect for showing comparisons.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/visuals/extension_dependencies_30d.svg">Graphviz</a></strong>: Ideal for easily creating complex graphs and diagrams.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/visuals/people_dependencies_including_repositories_30_2_force_3d.html">3D Node Graph</a></strong>: Add an extra dimension to your data visualization.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/visuals/bubble_chart_extensions_contributors_30d.html">Bubble Chart</a></strong>: Perfect for showing relationships between data points in a visually engaging way.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/activemq/activemq/html/visuals/zoomable_circles_main.html">Zoomable Circles</a> / <a href="https://d3axxy9bcycpv7.cloudfront.net/asf/activemq/activemq/html/visuals/zoomable_sunburst_main.html">Sunbursts</a></strong>: Great for exploring hierarchical data with interactive zoom.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/visuals/tree_map_extensions_contributors_30d.html">Treemap</a></strong>: Perfect for visualizing nested data structures in a compact form.</li>
</ul>

<h3 id="icon-libraries">Icon Libraries</h3>

<p>Icons are the unsung heroes of data visualization. They add clarity and visual appeal and help communicate concepts quickly. Explore websites like thenounproject.com (my favorite) for a treasure trove of icons to enhance your visualizations.</p>

<p><img src="assets/images/data_site_icons.png" alt="" />
<em><strong>Figure 2:</strong> A screenshot from thenounproject.com.</em></p>

<p><br /></p>
<h2 id="version-controlled-lean-documents">Version Controlled Lean Documents</h2>

<p>I generate documents that are small, lean, and capable of being version-controlled, along with the data used to generate them.</p>

<h3 id="small-and-lean-documents">Small and Lean Documents</h3>

<p>The documents must be compact, ensuring they do not consume excessive storage space and are suitable for large projects. They are efficient, containing only essential information without unnecessary bloat, which makes them easy to read, understand, and manage.</p>

<h3 id="version-controlled">Version Controlled</h3>

<p>I manage these documents using a version control system (VCS) like Git. This system tracks changes over time and allows users to revert to previous versions if needed. It also enables multiple users to work on the same documents simultaneously, providing a clear history of changes, which improves collaboration and reduces conflicting edits.</p>

<h3 id="together-with-data">Together with Data</h3>

<p>I also store data used to generate the documents alongside the documents. This approach ensures that the documents and data are always in sync. The approach allows for reproducing any document version precisely as it was at any point in time, maintaining integrity and reliability.</p>

<h3 id="lean-hosting-techniques">Lean Hosting Techniques</h3>

<p>When it comes to hosting static HTML documents, two simple yet crucial requirements are essential:</p>

<ol>
  <li>
    <p><strong>Open Documents on Your Laptop</strong>: You can easily open your documents directly on your laptop without needing to install any servers or special frameworks. This ensures accessibility anytime, anywhere—no setup required!</p>
  </li>
  <li>
    <p><strong>Share Across the Organization</strong>: Use any simple HTTP server (like GitHub Pages) for straightforward sharing. There is no complex setup; it is just pure, effortless sharing.</p>
  </li>
</ol>

<p>Keeping things simple keeps your documents accessible, easy to share, and maintainable. No advanced technical knowledge or elaborate configurations are necessary. So, create your documents, open them anywhere, and share them effortlessly!</p>

<h3 id="benefits">Benefits</h3>

<p>Lean documents are efficient to generate, easy to store, and fast to process. They provide detailed traceability, enhancing transparency and accountability through a comprehensive history of changes. Consistency is maintained as the context and basis for documents are always available, preventing inconsistencies and errors. Multiple users can efficiently collaborate with clear mechanisms to resolve conflicts and track contributions.</p>

<p>By ensuring all generated documents are small, lean, and version-controlled along with their data, the system maximizes efficiency, consistency, and collaboration while maintaining high traceability and reproducibility.</p>

<p><br /></p>
<h2 id="collaborative-editing-via-google-sheets">Collaborative Editing via Google Sheets</h2>

<p>To facilitate collaborative editing of data that requires manual changes, I frequently relied on Google Sheets to provide a controlled collaborative editor to a broader audience. By leveraging Google Sheets, multiple users can simultaneously access, edit, and update data in real-time, ensuring that everyone works with the most current information.</p>

<p><img src="assets/images/data_site_actors.png" alt="A simple runtime architecture leveraging GitHub pages and Google Sheets." />
<em><strong>Figure 3:</strong> A collaborative editing model.</em></p>

<p>I embedded a JavaScript script within the Google Sheet to further streamline this process. This script’s primary function was to export the data into a JSON format, which you can use to generate visual documents using HTML templates.</p>

<p><img src="assets/images/data_site_sheet_json.png" alt="" />
<em><strong>Figure 4:</strong> Exporting Google Sheet data to JSON for document generation.</em></p>

<p><br /></p>
<h2 id="two-examples-deployments">Two Examples Deployments</h2>

<p>In my recent experiences, I have utilized the following two examples to create a dynamic ecosystem of collaborative, data-driven dashboards.</p>

<p><strong>Simple Setup with GitHub Pages and Google Sheets:</strong> Start with a straightforward setup using GitHub Pages for hosting and Google Sheets for data management. This combination is powerful, easy to maintain, and highly accessible. The open-source example is available at <a href="https://zeljkoobrenovic.github.io/grounded-architecture-dashboard-examples/apps/docs/index.html">the Grounded Architecture resources site</a></p>

<p><img src="assets/images/data_site_simple_arch_1.png" alt="A simple runtime architecture leveraging GitHub pages and Google Sheets." />
<em><strong>Figure 5:</strong> A simple runtime architecture leveraging GitHub pages and Google Sheets.</em></p>

<p><strong>Simple Setup with GitHub Pages and Google Sheets:</strong> Start with a straightforward setup using GitHub Pages for hosting and Google Sheets for data management. This combination is powerful, easy to maintain, and highly accessible. The open-source example is available at</p>

<p><img src="assets/images/data_site_simple_arch_2.png" alt="Slightly more flexible runtime architecture leveraging CDNs, internal IAM, and Google Sheets." />
<em><strong>Figure 6:</strong> Slightly more flexible runtime architecture leveraging CDNs, internal IAM, and Google Sheets.</em></p>

<p><br /></p>
<h2 id="its-your-turn-now">It’s Your Turn Now!</h2>

<p>By adhering to the principles and techniques described, you’ll be well-equipped to create stunning, maintainable architectural documentation and visualizations that everyone in your organization can appreciate and utilize. Happy architecting!</p>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[A few practical tips on building lean architecture dashboards and documents (e.g., to create the data foundation) using simple, widely available tools.]]></summary></entry><entry><title type="html">Context: Fast-Moving Global Organizations</title><link href="http://localhost:4000/context" rel="alternate" type="text/html" title="Context: Fast-Moving Global Organizations" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/context</id><content type="html" xml:base="http://localhost:4000/context"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/roller-coaster-3605743_1920.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/paulbr75-2938186/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3605743">Paul Brennan</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3605743">Pixabay</a>
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong> Understand the context in which the ideas in this book developed.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>To better understand any idea or solution, it is crucial to understand the context in which this idea developed.</li>
    <li>The Grounded Architecture approach has evolved in the context of global, loosely coupled organizations that are diverse, with nonlinear growth dynamics, and under transformation pressures.</li>
  </ul>
</blockquote>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 130%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br />
My approach to creating and running an architecture function is not an abstract idea. Instead, it is the generalization of lessons learned while solving specific problems in a particular context.</p>

<div class="quote">
My approach to creating and running an architecture function is not an abstract idea. Instead, it is the generalization of many lessons learned while solving specific problems in a particular context.
</div>

<p>To truly grasp any idea or solution, you need to understand the context in which these ideas were born. I base my views on my time as a Chief Architect at AVIV Group and as a Principal Architect at eBay Classifieds and Adevinta. Let’s dive into some key characteristics of the organizational context that shaped my Grounded Architecture approach:</p>
<ul>
  <li><strong>Global scale</strong>: operating across multiple countries and continents with millions of users.</li>
  <li><strong>Multi-dimensional diversity</strong>: the organizations I worked in were diverse, including customer base, workforce, business models, team topologies, and technology stacks.</li>
  <li><strong>Nonlinear growth dynamics</strong>: besides organic growth, big organizations change their portfolio through mergers and acquisitions of new businesses or divestments.</li>
  <li><strong>Synergies and transformation pressures</strong>: big organizations do not want just to be big. They want to exploit the benefits of the economies of scale and reduce duplication of efforts.</li>
  <li><strong>Decentralized, loosely-coupled organizational units</strong>: organizational units have significant autonomy.</li>
</ul>

<p><br /></p>

<h2 id="global-scale">Global Scale</h2>

<p>I have honed my approach within genuinely global and multicultural organizations on a massive scale:</p>

<ul>
  <li>Operating across numerous geographies, cultures, and languages,</li>
  <li>Serving millions of users daily,</li>
  <li>Collaborating with thousands of software developers across hundreds of product and development teams,</li>
  <li>Implementing systems comprising hundreds of millions of lines of source code.</li>
</ul>

<p><img src="assets/images/arch/earth-g217b5730b_1920.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/thedigitalartist-202249/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=2254769">Pete Linforth</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=2254769">Pixabay</a>
</div>

<p>Operating on a global scale introduces several compelling opportunities for organizations. It can significantly increase organizational effectiveness by <strong>reducing duplication of effort</strong> through centralized shared activities. Additionally, leveraging <strong>economies of scale</strong> allows for cost advantages, such as lowering the unit prices of utilized technologies. Global operations also enhance <strong>business resilience and flexibility</strong>, enabling compensation for local market fluctuations with global resources. The expansive talent pool available to global organizations supports local and international initiatives. Moreover, these organizations possess significant resources to invest in supporting nonlinear growth through mergers and acquisitions (M&amp;As).</p>

<p>However, the global and massive scale also presents numerous challenges. It results in <strong>high organizational complexity</strong>, with thousands of potential communication channels within the organization. The <strong>complex technology landscape</strong> entails numerous interconnected services. Managing a large talent pool incurs <strong>high workforce costs</strong>. Furthermore, such organizations face high computing resource expenses due to the need to serve a vast customer base around the clock. The operational complexity increases with high and variable customer demands across multiple locations. Additionally, global organizations have a <strong>vast attack surface</strong>, with many potential entry points for attackers. Lastly, any manual process, such as creating an organizational or technology landscape overview, is limited due to the scale involved.</p>

<p>Balancing these opportunities and challenges on a global scale has been one of the most challenging and rewarding aspects of my architectural work.</p>

<p><br /></p>
<h2 id="multi-dimensional-diversity">Multi-Dimensional Diversity</h2>

<p>The organizations I worked with were incredibly diverse across multiple dimensions:</p>

<ul>
  <li><strong>Cultures</strong>: Collaborated with a varied workforce and clientele, both local and remote.</li>
  <li><strong>Organization</strong>: Engaged with units of different sizes, complexities, and organizational styles.</li>
  <li><strong>Product</strong>: Managed diverse features catering to various markets and customer segments.</li>
  <li><strong>IT Architecture</strong>: Balanced legacy systems with modern approaches.</li>
  <li><strong>Technology</strong>: Utilized numerous programming languages and thousands of third-party libraries, frameworks, and services.</li>
</ul>

<p><img src="assets/images/arch/pictures-g139ff7ebb_1280.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/simon-3/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=381937">Simon</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=381937">Pixabay</a>
</div>

<p>I worked with units differing in several aspects:</p>
<ul>
  <li><strong>Unit Size</strong>: Ranged from hundreds of employees to just a dozen.</li>
  <li><strong>Team Topologies</strong>: Spanned from single-team setups to hierarchical team organizations.</li>
  <li><strong>Architectural Roles</strong>: Varied from having dedicated local architecture teams and lead architects to smaller units where team members handled architectural duties alongside other responsibilities.</li>
</ul>

<p>We managed a range of styles in active production systems, from legacy <strong>monolithic</strong> applications to intricate modern <strong>microservice and serverless</strong> ecosystems. Each organizational segment had its own unique history and legacy systems.</p>

<p>Our technology stack was extensive, covering multiple mainstream technologies. The infrastructure included several public cloud providers (AWS, GCP, Azure) and custom-built private data centers. Our systems employed a variety of application technologies, such as:</p>
<ul>
  <li><strong>Database Technologies</strong>: MySQL, PostgreSQL, MongoDB, Cassandra, AWS RDS, and more.</li>
  <li><strong>Backend Programming Languages</strong>: Java, C#, Go, Scala, PHP, Node.js, Kotlin, among others.</li>
  <li><strong>Mobile App Programming Languages</strong>: Swift, Objective-C, Java, Kotlin, Flutter/Dart, and more.</li>
  <li><strong>Frontend Programming Languages and Frameworks</strong>: React, AngularJS, Vue, jQuery, and others.</li>
</ul>

<p>Diversity offers several opportunities, including:</p>
<ul>
  <li><strong>Increased Technology Innovation</strong>: A diverse workforce can explore more technologies and tools creatively.</li>
  <li><strong>Better Implementation</strong>: Access to a broader pool of resources allows for selecting the best tool for the job.</li>
</ul>

<p>However, diversity also brings challenges:</p>
<ul>
  <li><strong>Increased Complexity</strong>: Higher system landscape complexity and cognitive load for teams mastering numerous topics simultaneously.</li>
  <li><strong>Reduced Flexibility</strong>: Expertise is spread across many domains and technologies, limiting reorganization possibilities.</li>
  <li><strong>Higher Technical Debt</strong>: Multiple technology stacks can lead to increased legacy components and outdated technologies.</li>
</ul>

<p>In conclusion, while diversity is a rich source of new possibilities from an architectural perspective, it also necessitates managing complexity carefully.</p>

<p><br /></p>

<h2 id="nonlinear-growth-dynamics">Nonlinear Growth Dynamics</h2>

<p>Complex organizations like the ones I have worked in are often highly dynamic. These organizations frequently undergo significant growth, contraction, and reorganization, evolving both organically and inorganically.</p>

<p><img src="assets/images/arch/blur-g6bc6ee2cc_1920.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/pexels-2286921/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1853262">Pexels</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1853262">Pixabay</a>
</div>

<p><strong>Organic growth</strong> refers to internal expansion driven by the company’s own operations. <strong>Inorganic change</strong> involves acquiring other businesses, opening new locations, or divesting parts of the company.</p>

<p>Nonlinear growth, in particular, can be advantageous in several scenarios. It can <strong>rapidly increase the customer base</strong> or introduce new market segments. Additionally, such changes can <strong>accelerate innovation</strong> by incorporating new technologies or services.</p>

<p>However, nonlinear growth dynamics significantly impact architectural activities. The sudden integration of new companies <strong>increases organizational complexity</strong>, introducing many new units. Acquiring a new company also <strong>brings in new technology and engineering units</strong>, along with their unique processes and technology stacks. Furthermore, these nonlinear dynamics <strong>necessitate a flexible architecture</strong> to accommodate potential divestitures.</p>

<p>In summary, while nonlinear growth offers substantial benefits, it also presents challenges in managing increased complexity and maintaining architectural flexibility.</p>

<p><br /></p>
<h2 id="synergy-and-transformation-pressures">Synergy and Transformation Pressures</h2>

<p>Complex organizations aim to grow not just in size, but also in efficiency by leveraging economies of scale, cost synergies, and enhancing their capacity for innovation. Our investors expect us to become <strong>more than the sum of our original parts</strong>.</p>

<p><img src="assets/images/arch/gears-g06fe4e9a5_1920.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/mustangjoe-2162920/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1236578">MustangJoe</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1236578">Pixabay</a>
</div>

<p>Pursuing synergies and transformations offers several opportunities:</p>
<ul>
  <li><strong>Cost Reductions</strong>: Synergies lead to less duplication and lower expenses.</li>
  <li><strong>Accelerated Innovation</strong>: Savings from cost reductions free up resources for innovation.</li>
  <li><strong>Reuse and Sharing</strong>: Creating synergistic components enables more possibilities for reuse.</li>
  <li><strong>Increased Efficiency</strong>: Well-executed transformations result in greater efficiencies and lower unit costs.</li>
</ul>

<p>However, striving for synergies and efficiency presents challenges:</p>
<ul>
  <li><strong>Up-Front Investment</strong>: Significant initial investment is required to realize benefits, which carries high risks.</li>
  <li><strong>Performance Pressure</strong>: Teams must deliver excellent short-term results while undergoing significant transformations.</li>
  <li><strong>Temporary Productivity Drops</strong>: Balancing transformation activities with regular work can temporarily reduce productivity.</li>
  <li><strong>Increased Complexity</strong>: Post-transformation, the organization and technology landscape may become more complex due to increased dependencies, such as reusing central services.</li>
</ul>

<p>The pressure to achieve synergies and efficiency can lead to high expectations and complicate regular architectural work. Nonetheless, these forces also create numerous opportunities for growth and improvement.</p>

<p><br /></p>

<h2 id="decentralization-and-loose-coupling">Decentralization and Loose Coupling</h2>

<p>Researcher Karl Weick developed the concepts of tight and loose coupling to describe organizational structures, initially in educational institutions and later applied to diverse businesses. According to Weick, a <strong>tightly coupled organization</strong> has mutually understood rules enforced by <em>inspection and feedback</em> systems. In such organizations, management can directly coordinate different departments’ activities according to a central strategy.</p>

<p>In contrast, a <strong>loosely coupled organization</strong> lacks some elements of a tightly coupled one. Employees have <strong>more autonomy</strong>, and different departments may operate with <strong>little coordination</strong>.</p>

<p><img src="assets/images/arch/world-trade-center-g707209d17_1920.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/shire777-19410672/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=5889199">Shire777</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=5889199">Pixabay</a>
</div>

<p>Due to historical and strategic reasons, most organizational units I worked with were loosely coupled. Our companies frequently grew through acquisitions of companies in different marketplaces. Business strategies also promoted the independent evolution of local units to address local market needs more effectively and quickly. These units often enjoyed a high level of autonomy, frequently with their development teams and sometimes with local CFOs, CMOs, or CEOs.</p>

<p>Loose coupling offers several advantages:</p>
<ul>
  <li><strong>Higher Flexibility</strong>: Units can develop independently, addressing specific needs without synchronizing with other units.</li>
  <li><strong>Faster Time-to-Market</strong>: Fewer dependencies enable marketplaces to rapidly change and evolve their products for local needs.</li>
  <li><strong>Innovation</strong>: Opportunities to quickly explore ideas in smaller contexts.</li>
</ul>

<p>However, loose coupling also presents several challenges:</p>
<ul>
  <li><strong>Duplication of Effort</strong>: While local market needs differ, there is often significant overlap in product features and technology, leading to redundant efforts as each marketplace creates solutions for the same problems.</li>
  <li><strong>Increased Accidental Diversity</strong>: Limited synchronization may result in significantly different design and technology choices for the same problem, making it challenging to consolidate solutions, move personnel between teams, or benefit from economies of scale.</li>
  <li><strong>Limited Central Control</strong>: Fewer dependencies and varying goals make it more difficult to implement changes across the organization.</li>
</ul>

<p>From an architectural perspective, loose coupling presents an interesting challenge as it often leads to a conflict between global alignment and control and local autonomy.</p>

<h2 id="questions-to-consider">Questions to Consider</h2>

<p>To better understand any idea or solution, it is crucial to understand the context in which these ideas developed. When using ideas from this book, ask yourself how your organizational context differs from mine:</p>

<ul>
  <li><em>What are the unique characteristics of your organizational context?</em></li>
  <li><em>What is the scale of your organization? How it affects architecture function?</em></li>
  <li><em>How diverse is your organization?</em></li>
  <li><em>What are the growth dynamics of your organization?</em></li>
  <li><em>Are you experiencing synergy and transformation pressures?</em></li>
  <li><em>How (de)centralized is your organization?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[The Grounded Architecture approach has evolved in the context of global, loosely coupled organizations that are diverse, with nonlinear growth dynamics, and under transformation pressures. My work reflects my experiences at AVIV Group, eBay Classifieds, and Adevinta.]]></summary></entry><entry><title type="html">Evolution of Architecture: Embracing Adaptability, Scalability, and Data-Driven Decisions</title><link href="http://localhost:4000/goals" rel="alternate" type="text/html" title="Evolution of Architecture: Embracing Adaptability, Scalability, and Data-Driven Decisions" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/requirements</id><content type="html" xml:base="http://localhost:4000/goals"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/change-4777508_1280.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/bluehouseskis-14931490/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=4777508">Bluehouse Skis</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=4777508">Pixabay</a>
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong> Understand the requirements I identified for an architecture function in complex organizations.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>I identified the following needs that an architecture function should support: Executing At Scale, Adaptivity, Improving the Quality of Decision-Making with Data, and Maximizing Organizational Alignment &amp; Learning.</li>
  </ul>
</blockquote>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 130%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br /></p>

<p>Grounded Architecture emerged as a necessity in response to our <a href="context">intricate and multifaceted challenges</a>. Grounded Architecture was designed to address these specific challenges. By moving away from manual processes and embracing automation, data-driven decision-making, and adaptive frameworks, we aimed to create a <strong>more resilient and effective</strong> architectural practice.</p>

<p><img src="assets/images/stress-gc7a712a2f_1920.jpg" alt="" /></p>
<div style="text-align: center; font-size: 70%; color: grey; margin-bottom: 12px; margin-top: -12px;">
Image by <a href="https://pixabay.com/users/geralt-9301/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7446584">Gerd Altmann</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7446584">Pixabay</a>
</div>

<h2 id="goals">Goals</h2>

<p>Here’s a detailed breakdown of the goals we set to revamp our approach.</p>

<h3 id="goal-1-executing-at-scale">Goal 1: Executing At Scale</h3>

<p>Our organization comprises hundreds of teams and thousands of projects, each with unique complexity and requirements. Traditional, one-size-fits-all approaches to architecture practice cannot keep up. We needed a system that could support this vast and varied ecosystem. Grounded Architecture was designed to provide the scalability necessary to <strong>handle such diversity at scale</strong>, ensuring that teams and projects received the support they needed without being constrained by the limitations of processes.</p>

<h3 id="goal-2-adaptivity">Goal 2: Adaptivity</h3>

<p>In our dynamic environment, significant change is not just frequent; it’s expected. Whether these changes are organic, like evolving business needs, or inorganic, like mergers and acquisitions, our architecture must be <strong>able to adapt swiftly</strong>. Grounded Architecture was crafted to be flexible and responsive, allowing us to pivot quickly in response to new challenges and opportunities. This adaptability ensures that our architectural framework remains relevant and effective, no matter how the organizational landscape shifts.</p>

<h3 id="goal-3-increasing-quality-of-decisions-with-data">Goal 3: Increasing Quality of Decisions with Data</h3>

<p>Relying on gut feelings or individual opinions is always insufficient and risky when dealing with operations at scale. Decisions need to be based on solid data to <strong>ensure accuracy and reliability.</strong> Grounded Architecture aims to incorporate advanced tools and mechanisms to support data-driven decision-making. By leveraging data and analytics, we can move away from subjective opinions and towards objective, evidence-based decisions. This approach enhances the quality of our decisions and ensures that they are consistent and aligned with our organizational goals.</p>

<h3 id="goal-4-maximizing-organizational-alignment">Goal 4: Maximizing Organizational Alignment</h3>

<p>In a global, fast-moving organization, misalignment can quickly become the norm. Different teams and departments might pursue conflicting objectives, leading to inefficiencies and confusion. Grounded Architecture aims to <strong>serve as a cohesive force,</strong> promoting alignment across the entire organization. Providing a clear, unified framework helps to minimize misalignments. It facilitates all parts of the organization working towards common goals. This alignment is crucial for maintaining efficiency and avoiding the chaos that can arise from disparate efforts.</p>

<h3 id="goal-5-maximizing-organizational-learning">Goal 5: Maximizing Organizational Learning</h3>

<p>Staying current with emerging technologies and industry trends is essential for maintaining a competitive edge. Still, it can be challenging when dealing with the demands of legacy systems. Grounded Architecture is designed to facilitate continuous learning and growth. It supports the rapid adoption of new technologies and encourages <strong>ongoing education and training.</strong> By keeping the organization up-to-date with the latest developments, Grounded Architecture aims to ensure we always have the best tools and knowledge to drive innovation and improvement.</p>

<p>Grounded Architecture aims to transform a typically cumbersome, manual-process-driven practice into a streamlined, adaptive, and learning-focused powerhouse.</p>

<h2 id="questions-to-consider">Questions to Consider</h2>

<p>Knowing what goals architecture practice needs to support in your organization is crucial to defining structures and measuring your impact. Some of the plans may be universally applicable. Others may be unique to your context. Ask yourself the following questions:</p>

<ul>
  <li><em>What is the scale of your architecture function? Does your scale require special measures to ensure your architecture practice efficient operations?</em></li>
  <li><em>What are the key decisions you need to make? Do you have the data to base your decisions?</em></li>
  <li><em>How aligned are units in your organizations? How much friction is there? How can architecture function help?</em></li>
  <li><em>How much is your organization learning? How is the learning supported?</em></li>
  <li><em>How stable is your organization? How likely is it that significant changes will occur in your organization?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[I identified the following needs that an architecture function should support: Executing At Scale, Adaptivity, Improving the Quality of Decision-Making with Data, and Maximizing Organizational Alignment & Learning.]]></summary></entry><entry><title type="html">Grounded Architecture: Introduction</title><link href="http://localhost:4000/grounded-architecture" rel="alternate" type="text/html" title="Grounded Architecture: Introduction" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/grounded-architecture</id><content type="html" xml:base="http://localhost:4000/grounded-architecture"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/buildings-205986_1920.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/ichigo121212-11728/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=205986">Ichigo121212</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=205986">Pixabay</a>
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong> Get an overview of the Grounded Architecture structure: Data Foundation, People Foundation, and Architecture Activities Platform.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>I introduce three elements of Grounded Architecture: The Data Foundation, The People Foundation, and The Architecture Activities Platform as an approach to setting organizational structures for a modern IT architecture practice.</li>
    <li>Prioritizing people interactions and data over processes and tools, Grounded Architecture aims to connect architecture practice to all organizational levels as an antidote to the “ivory tower” architecture.</li>
  </ul>
</blockquote>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 130%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br />
In this part, I will briefly introduce the structure of Grounded Architecture. I chose the term “Grounded Architecture” to highlight that the primary goal of my approach is <strong>avoid having an “ivory tower” architecture function</strong> disconnected from the organization. This disconnection is a real danger in a <a href="context">fast-moving, global, and diverse setting</a>. In other words, I wanted to create an architectural function that is <strong>well-grounded in the organization</strong>.</p>

<p>Prioritizing people’s interactions and data over processes and tools, Grounded Architecture aims to connect architecture practice to all organizational parts and levels as an antidote to the “ivory tower” architecture.</p>

<p>Grounded Architecture, as an approach to setting organizational structures for architectural practice, has three elements:</p>

<ul>
  <li>The Data Foundation,</li>
  <li>The People Foundation,</li>
  <li>The Architecture Activities Platform.</li>
</ul>

<p><img src="assets/images/model.png" alt="" /></p>

<p><em><strong>Figure 1:</strong> The structure of Grounded Architecture.</em></p>

<p>The <em>Data Foundation</em> is <strong>a system of tools and resources</strong> that enables architects to make <strong>data-informed decisions</strong> based on a real-time and complete overview of the organization’s technology landscape. The <a href="data">Data Foundation section</a> provides more details.</p>

<p>The <em>People Foundation</em> is <strong>a network of people</strong> doing architecture across the organization. This Pillar is crucial to ensure that the architecture function has any <strong>tangible impact</strong>. The <a href="people">People Foundation section</a> provides more details.</p>

<p>Lastly, the <em>Architecture Activities Platform</em> defines <strong>a set of processes and agreements</strong> enabling architects to do everything that architecture typically does, leveraging data and People Foundations to create a data-informed, organization-wide impact. The <a href="activities">Architecture Activities Platform section</a> provides more details on the Architecture Activities Platform.</p>

<p>The Architecture Activities Platform is <strong>only valid with the healthy Data and People Foundations</strong>. Without data and people connections, an Architecture Activities Platform becomes an ivory tower institution, generating opinion-based decisions disconnected from reality.</p>

<p>Now that we’ve got the Grounded Architecture tour out of the way, let’s dig into the specifics.</p>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[I introduce three elements of Grounded Architecture: The Data Foundation, The People Foundation, and The Architecture Activities Platform.]]></summary></entry><entry><title type="html">Data Foundation</title><link href="http://localhost:4000/data" rel="alternate" type="text/html" title="Data Foundation" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/data-platform</id><content type="html" xml:base="http://localhost:4000/data"><![CDATA[<p><img src="assets/images/arch/architecture-1857175_1920.jpg" style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/3844328-3844328/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1857175">Lorenzo Cafaro</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1857175">Pixabay</a>
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>  Understand how to use diverse data sources to support architecture decision-making processes and get concrete tips on creating architecture-centric data tools.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>The architecture Data Foundation serves as a medium to create a complete, up-to-date picture of critical elements of the technology landscapes of big organizations.</li>
    <li>The Data Foundation provides an architecture-centric view of data about a technology landscape based on source code analyses, public cloud billing reports, vibrancy reports, or incident tickets.</li>
    <li>To facilitate the creation of a Data Foundation, I have been working on creating open-source tools that can help obtain valuable architectural insights from data sources, such as source code repositories. Check out open-source <a href="https://zeljkoobrenovic.github.io/grounded-architecture-dashboard-examples/">architecture dashboard examples</a> and <a href="https://sokrates.dev">Sokrates</a>.</li>
  </ul>
</blockquote>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 140%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br /></p>
<blockquote>
  <p><em>“If we have data, let’s look at data. If all we have are opinions, let’s go with mine.”</em> -— Jim Barksdale</p>
</blockquote>

<p><br />
Everywhere I worked on creating architectural functions, I strongly (aka obsessively) emphasized data. Consequently, one of the first steps I make in any architecture practice is to create an architecture Data Foundation to get a complete, up-to-date picture of critical elements of an organization’s technology landscapes (Figure 1). Manual documentation does not scale, and relying on data ensures the reliability and scalability of decision-making. In the past several years, I have also been working on creating open-source tools, such as <a href="https://sokrates.dev">Sokrates</a>, that can help obtain valuable architectural insights from data sources, such as source code repositories or public cloud billing reports.</p>

<p><img src="assets/images/model-data.png" alt="" />
<em><strong>Figure 1:</strong> The structure of Grounded Architecture: The Data Foundation.</em></p>

<p>The good news is that <strong>big organizations have lots of data</strong> that, if used wisely, can provide an excellent basis for an architectural Data Foundation. With some automation and curation, getting a crystal clear overview of the technology landscape may be closer than it initially appears.</p>

<div class="quote">
Manual documentation does not scale, and relying on data ensures reliability and scalability.
</div>

<p><br /></p>
<h2 id="examples-of-data-foundation-tools">Examples of Data Foundation Tools</h2>

<p>To illustrate what I mean by Data Foundation, I will give a few concrete examples from my recent work. Data I typically used include (Figures 2 and 3):</p>
<ul>
  <li><strong>Source code</strong> contains an incredible amount of information about technology, people’s activity, team dependencies, and the quality of software systems. By analyzing commit histories, code complexity, and contributions, we can identify critical areas of improvement, understand team dynamics, and ensure code quality.</li>
  <li><strong>Public cloud billing reports</strong> provide an overview and trends about used cloud services, regions, and budgets. Monitoring billing reports helps manage budgets, identify cost-saving opportunities, and understand usage patterns across different services and regions.</li>
  <li><strong>Incident reports</strong> can reveal trends and dependencies among incidents. Analyzing these reports reveals trends, common issues, and dependencies among incidents, helping in proactive problem management and improving system reliability.</li>
  <li><strong>Key business metrics</strong>, like vibrancy, which can show user activity on our systems. Tracking these metrics helps in assessing the health of the business, understanding user behavior, and guiding strategic decisions to enhance user experience.</li>
  <li><strong>Messaging and collaboration platforms (such as Slack) activity reports</strong>, which can help understand discussion topics and team interactions. Analyzing these reports helps in understanding collaboration patterns, identifying key discussion areas, and improving team communication and productivity.</li>
</ul>

<p>In the following sections, I detail several of these architectural data-driven tools.</p>

<p><img src="assets/images/apps.png" style="padding: 4px; padding-top: 8px; padding-bottom: 8px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; margin-bottom: 6px" />
<br /></p>

<p><strong>Figure 2:</strong> <em>A screenshot of the start page of the architecture data dashboard we’ve built and used at AVIV Group.</em></p>

<p><img src="assets/images/apps-ebay.png" style="padding: 4px; padding-top: 8px; padding-bottom: 8px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; margin-bottom: 6px" />
<br /></p>

<p><strong>Figure 3:</strong> <em>A screenshot of the start page of the architecture data dashboard we’ve built and used at eBay Classifieds.</em></p>

<p><br /></p>
<h3 id="example-1-source-code-and-commit-history">Example 1: Source Code and Commit History</h3>

<p>The source code and its commit history are like a treasure chest for creating data-driven architecture documentation—packed with nuggets of wisdom about technology, team activities, dependencies, and software quality. To help dig up this treasure without getting your hands too dirty, I’ve developed and actively maintain a project called <a href="https://sokrates.dev">Sokrates</a>.</p>

<div class="quote">
Source code and its commit history include an astonishing amount of information about technology, people activity, team dependencies, and the quality of software systems.
</div>

<p>Sokrates is designed with an architect’s x-ray vision, allowing you to zoom in and out of source code landscapes. It provides a high-level overview of the IT landscape, summarizing data from various teams and groups, while also letting you dive deep into the code-level details. This dual functionality makes it the perfect sidekick for both CTO-level strategy powwows and developer-level code critiques.</p>

<p>For a more entertaining look at what Sokrates can do, check out the <a href="https://www.sokrates.dev/">Sokrates examples</a>. Here are some blockbusters:</p>

<ul>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/index.html">Apache Software Foundation Repositories</a></strong>: An epic saga of over 1,000 repositories with more than 180 million lines of code, 22,000 contributors, and 2.4 million commits.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/meta/_sokrates_landscape/index.html">Facebook/Meta OSS Repositories</a></strong>: A thriller with 800 repositories, 120 million lines of code, 20,000 contributors, and over 2 million commits.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/microsoft/_sokrates_landscape/index.html">Microsoft OSS Repositories</a></strong>: A drama featuring over 2,400 repositories with more than 100 million lines of code, 18,000 contributors, and 1.2 million commits.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/google/_sokrates_landscape/index.html">Google OSS Repositories</a></strong>: A blockbuster with over 1,600 repositories, more than 200 million lines of code, 27,000 contributors, and 2.4 million commits.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/asf/_sokrates_landscape/index.html">Linux Source Code</a></strong>: A classic with 178 repository sub-folders, more than 23 million lines of code, 17,000 contributors, and 1.7 million commits.</li>
  <li><strong><a href="https://d3axxy9bcycpv7.cloudfront.net/amzn/_sokrates_landscape/index.html">Amazon OSS Repositories</a></strong>: A thriller with over 2,700 repositories, more than 130 million lines of code, 13,000 contributors, and 600,000 commits.</li>
</ul>

<p>In addition to standard source code and commit history analyses, I also have built several special source code analyses to get further details:</p>
<ul>
  <li><strong>Travis and Jenkins Analyzers</strong>: Perfect for sleuthing how teams build CI/CD pipelines.</li>
  <li><strong>Dockerfile Scan</strong>: Creates a tech radar of runtime technologies.</li>
  <li><strong>GitHub API Pull Request Analyses</strong>: To identify deployment frequency.</li>
</ul>

<p>Feel free to use these or similar tools, but I encourage you to experiment with your source-code analyses as well.</p>

<p><br /></p>
<h3 id="example-2-public-cloud-usage">Example 2: Public Cloud Usage</h3>

<p>Developing in or migrating to the public cloud can dramatically increase transparency thanks to uniform automation and monitoring. The <strong>public cloud transparency</strong> offers incredibly valuable data out-of-the-box.</p>

<p><a href="https://aws.amazon.com">Amazon Web Services (AWS)</a>, <a href="https://cloud.google.com/">Google Cloud Platform (GCP)</a>, <a href="https://azure.microsoft.com/">Microsoft Azure</a>, and other public cloud providers give detailed data about which platform uses which services, resource family, and budget. You can also understand which people and teams have access to each service. Getting real-time information about cloud usage and automatically understanding the trends is straightforward.</p>

<p>Figure 4 shows the anonymous screenshot of the Cloud usage explorer, a tool I built to visualize automatically-collected data from standard Google Cloud Platform (GCP) usage reports.</p>

<p><img src="assets/images/archdata/cloud-usage-explorer.png" alt="" />
<br />
<em><strong>Figure 4:</strong> An example of a cloud usage explorer.</em></p>

<p><br /></p>
<h3 id="example-3-financial-and-vibrancy-data">Example 3: Financial and Vibrancy Data</h3>

<p>Finance departments are like Sherlock Holmes in the business world—super data-driven and always on the case with high-quality data that could be a goldmine for architects. Beyond the usual suspects of costs, budgets, and other dry financial stuff, I’ve discovered they also track the fun stuff, like <strong>vibrancy and usage levels</strong>.</p>

<p>These finance sleuths need this juicy data to, for instance, link the performance of their financial systems with how much they’re being used. This kind of usage data is a secret weapon for architecture discussions. By linking systems’ usage levels and vibrancy with their public cloud costs, we can uncover hidden areas of improvement and inefficiencies (Figure 5).</p>

<p>So, next time you’re knee-deep in architectural plans, don’t forget to call the finance for top-notch data insights!</p>

<p><img src="assets/images/arch/cross-data.png" alt="" />
<br />
<em><strong>Figure 5:</strong> Combining data from a different source (e.g., cloud billing reports and vibrancy or revenue can lead to new insights (e.g., identifying inefficiencies in the application portfolio).</em></p>

<p><br /></p>
<h3 id="example-4-data-driven-capability-map">Example 4: Data-Driven Capability Map</h3>

<p><a href="https://pubs.opengroup.org/togaf-standard/business-architecture/business-capabilities.html">Capability models</a> are frequently associated with Enterprise Architecture, providing a structured approach to organizing and managing an organization’s capabilities. Traditionally, these capability maps are maintained manually, which can be time-consuming and prone to inaccuracies. A data-driven version of the capability map enhances this approach by integrating real-time data sources, offering a more dynamic and accurate representation of capabilities. A data-driven version of the capability map enhances this approach by integrating real-time data sources, making the capability map <strong>dynamic, alive</strong>, and significantly more useful.</p>

<p>I have created several versions of data-driven capability maps, where a capability map includes capability data cards that consolidate various data types relevant to each capability. We then automatically generated sites and visuals from these data for self-service use within the organization. These cards provide a comprehensive view of the current state and performance of each capability, integrating multiple data sources:</p>

<ol>
  <li><strong>Documentation Data:</strong>
    <ul>
      <li><strong>Links to Key Documents:</strong> Direct access to important documents related to the capability.</li>
      <li><strong>Automated Summaries:</strong> Using generative AI to automatically summarize key documents, making it easier to quickly understand the essential points and status.</li>
    </ul>
  </li>
  <li><strong>Technical Implementation Evidence:</strong>
Source Code Repositories:** These repositories link to and analyze all source code related to the capability, providing insight into the technical implementation.
    <ul>
      <li><strong>Cloud Accounts and Billing Reports:</strong> Detailed analyses of cloud accounts, including costs, services used, and geographical distribution (regions).</li>
      <li><strong>Infrastructure Costs and Analyses:</strong> Detailed breakdown of the capability’s associated infrastructure costs.</li>
      <li><strong>Legacy Assets List:</strong> This is an Inventory of legacy systems and components that are part of or impact the capability.</li>
      <li><strong>Technical Debt Inventory:</strong> Identification and assessment of technical debt associated with the capability.</li>
    </ul>
  </li>
  <li><strong>Planning Evidence:</strong>
    <ul>
      <li><strong>Detailed Planning Data:</strong> Information from planning systems like Jira, including detailed task breakdowns and timelines.</li>
      <li><strong>Effort Estimates:</strong> Projections of the efforts required to develop or maintain the capability.</li>
    </ul>
  </li>
  <li><strong>Execution Data:</strong>
    <ul>
      <li><strong>Product and Business Evidence:</strong>
        <ul>
          <li><strong>Documentation of Demos:</strong> Links to slides, videos, and other demo materials.</li>
          <li><strong>Product Analytics Data:</strong> Metrics such as user engagement (vibrancy), conversion rates, and other relevant analytics.</li>
        </ul>
      </li>
      <li><strong>HR Evidence:</strong>
        <ul>
          <li><strong>People and Teams:</strong> Information about the personnel and teams working on the capability.</li>
          <li><strong>Time Tracking Data:</strong> Detailed reports on the time spent on the capability by different team members.</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<p>Real-time data integration allows for creating dynamic and aggregated views across capabilities. These views can be grouped by criteria, such as domain programs or themes, providing a broader perspective on how capabilities interrelate and contribute to strategic objectives. Examples include:</p>

<ul>
  <li><strong>Domain Programs:</strong> Grouping capabilities by specific business domains (e.g., finance, marketing, operations) to understand domain-specific strengths and weaknesses.</li>
  <li><strong>Themes:</strong> Aggregating capabilities around strategic themes or initiatives (e.g., digital transformation, customer experience improvement) to track progress and resource allocation.</li>
</ul>

<p>Key benefits of a data-driven capability map include:</p>

<ol>
  <li><strong>Enhanced Decision-Making:</strong> Real-time data provides a current and accurate picture of capabilities, enabling better-informed strategic decisions.</li>
  <li><strong>Increased Transparency:</strong> Detailed evidence and summaries help us understand the status and needs of each capability.</li>
  <li><strong>Improved Efficiency:</strong> Automated data aggregation and reporting reduce manual effort and speed up the analysis process.</li>
  <li><strong>Strategic Alignment:</strong> Aggregated views help ensure that capabilities are aligned with broader organizational goals and initiatives.</li>
  <li><strong>Resource Optimization:</strong> Detailed cost and effort data help optimize resource allocation and manage budgets effectively.</li>
</ol>

<p>By leveraging a data-driven capability map, organizations can achieve a more dynamic, transparent, and efficient approach to managing their capabilities, leading to improved strategic outcomes and operational performance.</p>

<p><br /></p>
<h2 id="requirements-for-a-data-foundation">Requirements For A Data Foundation</h2>

<p>A Data Foundation should be a central place with <strong>authoritative, relevant, and curated data</strong> about the organizational technology landscape. Technically, you can implement Data Foundation tools like those discussed in the previous section, using simple tools like Google Drive, with documents organized in folders or as an internal website. I recommend investing some effort in creating better infrastructure and user experience, as it can enable more people to access and benefit from data. A solid setup will make it easier for more people to access and benefit from the data, turning it into a real asset rather than a digital junk drawer.</p>

<p>Simply collecting and putting data in one place will not create any value. Regardless of how you implement your Data Foundation, with papers on the wall, in Google Drive, in Confluence, or with a nicely designed internal website, I have identified the following requirements that a Data Foundation needs to have:</p>

<ul>
  <li><strong>It is the single point of truth</strong> for all relevant architectural data. People should be able to go to one place and get the most relevant data.</li>
  <li><strong>It is curated for quality</strong> so people can trust the data. Simply dumping data into one place will not help. You need to own curation to ensure that data are correct. You also should provide links to data sources so people can verify the facts.</li>
  <li><strong>It is curated for usability</strong> so people stay focused on valuable details. You must filter out useless or less relevant details, focusing on the essence. Investing in the UX design of documents or tools you create helps.</li>
  <li><strong>It is kept up to date</strong>, ideally in an automated fashion (or in a semi-automated repeatable way).</li>
  <li><strong>It is accessible to the whole organization</strong>. I genuinely believe that when you give employees access to information generally reserved for specialists, architects, or “higher levels,” they get more done independently. They can work faster without stopping to ask for information and approval. And they make better decisions without needing input from architects or the top.</li>
  <li><strong>It is used in decision-making</strong>. Having nicely curated and valuable data has zero value if you cannot ensure that such data inform vital decisions.</li>
</ul>

<p>My approach to building the Data Foundation is <strong>like creating a map.</strong> Maps are some of the most crucial documents in human history—they help us store and exchange knowledge about space and place. One thing all maps do is provide readers with a <strong>sense of orientation.</strong> And that, in a nutshell, is what Data Foundation should offer people in your organization: a sense of orientation in a waste space of technology, organizational and business topics. The map metaphor is also helpful as maps come with <strong>multiple layers.</strong> Similarly, the architecture of Data Foundation should give readers data layers about systems that describe their sizes, connections, quality, security, or human activity. It’s like having a trusty map that shows you where the treasure is and warns you about the dragons.</p>

<p><br /></p>
<h2 id="building-data-foundation">Building Data Foundation</h2>

<p>While each organization has its own quirky set of data, here are some tips I’ve found helpful in forming the architecture Data Foundation:</p>

<ul>
  <li>
    <p><strong>Start with the source code.</strong> My motto is <strong><em>“Talk is expensive. Show me the code.”</em></strong> Because let’s face it, code never lies—people, on the other hand, might forget a detail or two. I scan source code as soon as possible using tools like <a href="https://sokrates.dev">Sokrates</a>. Modern IT enterprises store almost everything as code. It’s the richest and most up-to-date documentation on what’s happening. Quick source code scans can reveal that your “simple” system is actually a digital spaghetti monster.</p>
  </li>
  <li>
    <p><strong>Connect with finance and governance teams.</strong> My second motto is <strong><em>“Follow the money!”</em></strong> You’d be amazed what you can learn from finance data (minus the sensitive parts, like revenue projections—let’s keep those secrets safe). Cloud billing reports and tech usage trends are collected anyway. Extract and connect these to get new insights without pestering people for more details.</p>
  </li>
  <li>
    <p><strong>Maintain a culture of transparency.</strong> Sharing fewer data with everyone is like handing out fewer candies at Halloween—easier and less chaotic. Keep it simple, avoid complex authorization mechanisms, and you’ll have fewer data goblins to manage.</p>
  </li>
  <li>
    <p><strong>Own the curation.</strong> People need to trust your data like they trust their morning coffee to wake them up. Spend time understanding data sets, curate them, and ensure they’re consistently presented. Think of yourself as the master curator and chief UX designer of the Data Foundation.</p>
  </li>
  <li>
    <p><strong>Use simple and easy-to-maintain infrastructures.</strong> For example, I publish the results of Sokrates analyses and other data tools as static resources on our enterprise GitHub pages. Avoid the headache of complex databases and backend software. In the <a href="https://github.com/zeljkoobrenovic/grounded-architecture-dashboard-examples">Architecture Dashboard Examples repository</a>, you’ll find the source code for building the Architecture Data Dashboard. The dashboard is a simple static website generated from JSON files and <a href="https://zeljkoobrenovic.github.io/grounded-architecture-dashboard-examples/">published via GitHub pages</a>.</p>
  </li>
</ul>

<p>These tips might just save you from drowning in the sea of data chaos and make your architectural life a bit smoother—or at least give you a few laughs along the way.</p>

<p><br /></p>
<h2 id="using-architecture-data-foundation">Using Architecture Data Foundation</h2>

<p>The Data Foundation can churn out data by the bucketful. Think of it like an atlas or a map—it’s great for finding your bearings and understanding the lay of the land. But, with the right mindset, you can turn that data into a treasure trove of insights.</p>

<p>Interpreting and using data requires a bit of effort—think of it as a detective game where the data holds the answers, but you need to come armed with the right questions. Here are some of the questions you should ask when you’ve got a pile of data at your fingertips:</p>

<ul>
  <li>
    <p><strong>Are we all rowing in the same direction?</strong> Source code overviews, public cloud usage explorers, or tech radars can highlight when systems and teams are out of sync, sparking heated debates that lead to real action.</p>
  </li>
  <li>
    <p><strong>Are we making the most of our technology?</strong> Comparing usage trends between teams can reveal fascinating outliers—both the virtuosos and those who are… let’s say, still tuning their guitars.</p>
  </li>
  <li>
    <p><strong>Are there signs our code might need a little TLC (tender, loving care)?</strong> Look out for oversized systems, rampant duplication, and files that go on longer than your Aunt Marge’s vacation slideshows.</p>
  </li>
  <li>
    <p><strong>Productivity trends: is more really more, or is more actually less?</strong> For instance, comparing the number of git merges to the number of developers can reveal if our dev processes are scalable. When scaling up teams, we aim to speed up delivery, but without proper structure, we might end up with a digital mosh pit.</p>
  </li>
  <li>
    <p><strong>Are we collaborating the way we want to?</strong> Repository analysis can reveal team topologies and unwanted dependencies. Sometimes, teams collaborate like a well-oiled machine; other times, it’s more like a group project in high school.</p>
  </li>
  <li>
    <p><strong>Are we working on what we really want to?</strong> We may aspire to innovate, but if we’re spending most of our time wrestling with legacy maintenance, we might need to rethink our priorities.</p>
  </li>
</ul>

<p>So there you have it. The data’s ready to spill its secrets—you need to know the right questions to ask. So, what is your question?</p>

<p><br /></p>
<h2 id="to-probe-further">To Probe Further</h2>

<ul>
  <li>Open-source <a href="https://zeljkoobrenovic.github.io/grounded-architecture-dashboard-examples/">architecture dashboard examples</a></li>
  <li><a href="https://sokrates.dev">Sokrates</a>, an open-source polyglot source code examination tool</li>
</ul>

<p><br />
<br /></p>
<h2 id="appendix-examples-of-insights-from-source-code-analyses">Appendix: Examples of Insights From Source Code Analyses</h2>

<p>Figures 6 to 10 show some insights from source code analyses with Sokrates.</p>

<p><br />
<img src="assets/images/archdata/src_1.png" alt="" /></p>

<p><strong>Figure 6</strong>: <em>Sokrates can instantly create a helicopter view of the technology landscape, programming languages, active contributors, and commit trends.</em>
<br />
<br /></p>

<p><img src="assets/images/archdata/src_2.png" alt="" /></p>

<p><strong>Figure 7</strong>: <em>Sokrates can show detailed code and contributors’ trends per repository, enabling zooming in each repository up to the code level.</em>
<br />
<br />
<br /></p>

<p><img src="assets/images/archdata/src_5.png" alt="" /></p>

<p><strong>Figure 8</strong>: <em>Sokrates can create a tech radar by tagging projects with identified technologies.</em>
<br />
<br />
<br /></p>

<p><img src="assets/images/archdata/src_3.png" alt="" /></p>

<p><strong>Figure 9</strong>: <em>Sokrates can show contributor trends, distribution of “veterans” and “rookies,” and dependencies between people and repositories, enabling zooming in into patterns of the contribution of individual contributors.</em>
<br />
<br />
<br /></p>

<p><img src="assets/images/arch/sokrates_teams.png" alt="" /></p>

<p><strong>Figure 10</strong>: <em>Sokrates can reveal the team topologies by plotting 2D and 3D graphs of dependencies that people create through working on the same repositories in the same period.</em>
<br />
<br />
<br /></p>

<h2 id="questions-to-consider">Questions to Consider</h2>

<p>Using data can significantly improve the efficiency and impact of architectural practice. But there are no simple tools that can instantly provide you insights. Ask yourself the following questions:</p>

<ul>
  <li><em>Have you considered using open-source tools like Sokrates to gain architectural insights from data sources? Why or why not?</em></li>
  <li><em>What are your views on the reliability and scalability of manual documentation?</em></li>
  <li><em>What steps would you take to create an architecture Data Foundation in your organization?</em></li>
  <li><em>Are there untapped data sources within your organization that could inform your architectural decisions?</em></li>
  <li><em>How could you automate gathering data for architectural insights in your organization?</em></li>
  <li><em>What examples can you provide of the data you’ve used to gain reliable information about technology in your organization?</em></li>
  <li><em>How would you examine public cloud billing reports, incident reports, or key business metrics for architectural insights?</em></li>
  <li><em>How can you ensure your data is reliable and up-to-date?</em></li>
  <li><em>Do you collaborate with finance and governance teams to incorporate financial and vibrancy data into your data analysis?</em></li>
  <li><em>Is there a culture of transparency in your organization?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[The Data Foundation serves as a medium to create a complete, up-to-date picture of critical elements of the technology landscapes of big organizations. The platform provides an architecture-centric view of data about a technology landscape based on source code analyses, public cloud billing reports, vibrancy reports, or incident tickets.]]></summary></entry><entry><title type="html">People Foundation</title><link href="http://localhost:4000/people" rel="alternate" type="text/html" title="People Foundation" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/people</id><content type="html" xml:base="http://localhost:4000/people"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/construction-4939383_1920.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/mostafa_meraji-13551092/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=4939383">mostafa meraji</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=4939383">Pixabay</a>
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>  Understand that architecture practice is all about people and get tips on creating organizational structures that support practical IT architecture practice.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>Developing the architecture function requires having competent, empowered, and motivated architects. Architecture practice must carefully organize, empower, and leverage scarce talent.</li>
    <li>In my work in the past few years, I combined two teams of architects: a small central architecture team and a cross-organizational distributed virtual team.</li>
  </ul>
</blockquote>

<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 140%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br /></p>

<p>As the wise Gregor Hohpe noted, transforming an organization isn’t about solving mathematical equations. No, it’s about moving people. Developing the architecture function requires competent, empowered, and motivated architects. This makes <strong>a strong network of people doing architecture</strong> crucial for any real impact. In simpler terms, <strong>Strong Architecture = Strong Architects</strong>.</p>

<div class="quote">
Strong Architecture = Strong Architects.
</div>

<p>Good architects are a rare breed. They bridge the gaps between business, product, organizational, and technology issues. They’re like the Swiss Army knives of the tech world. Hiring architects is like searching for a unicorn who’s also a full-stack developer with a knack for diplomacy. They need not only in-depth technical knowledge but also domain-specific and organizational knowledge. So, you cannot just 3D print your architects or hire them in buckets. But what you can do is to carefully organize, empower, and leverage this scarce talent (Figure 1).</p>

<p><img src="assets/images/model-people.png" alt="" />
<em><strong>Figure 1:</strong> The structure of Grounded Architecture: The People Foundation.</em></p>

<p>In my recent escapades, I worked with two teams of architect teams: a small <strong>central architecture team</strong> and <strong>a cross-organizational distributed virtual team</strong>. The central team is like the wise elders, guiding and supporting the rest of the organization. The distributed virtual team, on the other hand, is a merry band of rebels, working locally but also connecting across the organization, increasing transparency, building networks, and implementing change.</p>

<h2 id="background-central-vs-federated-architecture-function">Background: Central vs. Federated Architecture Function</h2>

<p>IT architecture practices generally follow one of two fundamental models: central or federated (Figure 2, <a href="https://www.mckinsey.com/business-functions/mckinsey-digital/our-insights/tech-forward/crafting-the-optimal-model-for-the-it-architecture-organization">McKinsey 2022</a>).</p>

<p><img src="assets/images/arch/arch_teams.png" alt="" />
<em><strong>Figure 2:</strong> Central vs. Federated Architecture Function..</em></p>

<p><strong>The central model</strong> is like a tightly run coffee shop. A large central team sets the rules, approves new work, and ensures everyone follows the script. Development teams in this model are like customers with no coffee-making skills, relying entirely on the central baristas. The central team handles infrastructure, operations, and security—essentially controlling the caffeine supply chain.</p>

<p><strong>The federated model</strong> is more like a coffee co-op, where each team has its own barista. A small central team or an <strong>architecture center of excellence (CoE)</strong> might provide high-level guidance, but the real magic happens locally. These baristas (architects) are embedded in development teams, facilitating high-level planning and acting as on-demand service providers.</p>

<p>The <strong>federated model</strong> is a favorite among <strong>cross-functional DevOps cultures</strong>, integrating infrastructure, operations, and security into their brews. Architects in this model focus on <strong>facilitation and enablement</strong>, not just making sure no one spills the beans. Modern agile organizations love the federated model. It keeps architects close to the action, ensuring they’re evaluated based on the success of the products they support. This focus on performance and reducing complexity is the secret recipe for a well-brewed architecture.</p>

<p><br /></p>
<h2 id="the-hybrid-model">The Hybrid Model</h2>

<p>To operate in a complex context, you must invest effort to ensure you have the <strong>right people at the right places</strong>. In the end, I usually found it best to adopt a model of a hybrid organization combining elements of central and federated orientation structures:</p>

<ul>
  <li>A Small Central Architectural Team, and</li>
  <li>Architecture Guilds &amp; Virtual Architectural Teams.</li>
</ul>

<p>This model is similar to the previously described <strong>federated model</strong> but with extra investment in a central team that should be more than just an on-demand service provider.</p>

<p>Think of it as a symphony orchestra, where the central team is the conductor, and the guilds and virtual teams are the talented musicians playing different instruments. Sure, each musician can play their part solo, but without the conductor, it might sound more like a chaotic jam session at your neighbor’s garage.</p>

<p>I prefer the <strong>hybrid team structure</strong> as it scales better in complex organizations:</p>
<ul>
  <li><strong>Guilds</strong> and virtual architecture teams support execution by <strong>increasing the number of people involved</strong> in architectural activities and increasing work efficiency through better alignment. Members representing various organizational units can have much <strong>more impact across the board</strong>.</li>
  <li>Having some capacity on the central level serves as a catalyst, helping people at local levels to do their jobs while being aligned and better connected with overall strategic goals and other teams working on related topics. It’s like having a superhero headquarters where everyone knows the plan to save the day.</li>
</ul>

<h3 id="central-architecture-team">Central Architecture Team</h3>

<p>The roles of people in central teams may differ depending on the organization. However, it’s crucial to recognize the value of dedicated roles in central architecture teams. These roles, in addition to the usual suspects doing architecture work, are instrumental in covering these crucial yet often overlooked responsibilities:</p>

<ul>
  <li>
    <p><strong>Build and maintain the architecture <a href="data">Data Foundation</a>.</strong> With all AI advances, it will not build itself! You need clear ownership, curation, and technical support to make it work.</p>
  </li>
  <li>
    <p><strong>Promote data-informed decision-making.</strong> It’s not enough to have data; you’ve got to <em>use</em> it. This is like trying to convince your grandpa to use a smartphone—challenging but doable. Architects should be tech-savvy wizards who show everyone else how things are done, making data the critical actor of every decision.</p>
  </li>
  <li>
    <p><strong>Proactively identify, connect, and maintain relationships with all relevant stakeholders.</strong> Think of architects as the social butterflies at a high school reunion—they’ve got to bridge all the cliques. Connecting different organizational units and stakeholders is their superpower.</p>
  </li>
  <li>
    <p><strong>Build internal architecture communities and guilds.</strong> Organizing rituals and gatherings takes effort.</p>
  </li>
</ul>

<p>While guilds and virtual teams can handle many of these activities, their voluntary and sometimes laid-back nature makes their support less reliable. The central architecture team can step in like the dependable backup generator, taking full long-term ownership and ensuring continuity, even if the community vibe fizzles out.</p>

<h3 id="architecture-guilds--virtual-architecture-teams">Architecture Guilds &amp; Virtual Architecture Teams</h3>

<blockquote>
  <p>“<em>A lot of cheap seats in the arena are filled with people who never venture onto the floor. They just hurl
mean-spirited criticisms and put-downs from a safe distance. … we need to be selective about the feedback we let into our lives. For me, if you’re not in the arena getting your ass kicked, I’m not interested in your feedback.</em>” — Brené
Brown, Rising Strong</p>
</blockquote>

<p>I’ve always found it crucial to rally passionate troops about architecture through a guild, a community of interest, or a virtual team. After all, who doesn’t love a good architecture geek meet-up?</p>

<p>Our guilds or virtual teams typically double as architects or tech leads in their respective departments, but they also moonlight by collaborating with their counterparts from other areas. These peer-to-peer communities are collectively responsible for spotting and nurturing architectural talent, mentoring, and helping each other out of sticky situations.</p>

<p>When we have an overabundance of guilds and teams, we split our architects into different cliques:</p>

<ul>
  <li><strong>General or core teams</strong>: These folks tackle a wide range of general architectural topics.</li>
  <li><strong>Specialist teams</strong>: Focused on specific parts of the tech stack, like native mobile apps, web frontends, or public cloud.</li>
  <li><strong>Strategic initiatives teams</strong>: Working on the big picture stuff like data strategy, public cloud strategy, transactions, or verticalization.</li>
</ul>

<p>Connecting the central and distributed teams is essential. In most places I’ve worked, these gatherings follow a well-trodden path:</p>

<ul>
  <li><strong>Regular (e.g., bi-weekly) forums</strong>: Here, updates are shared, architectural spikes are announced, and decisions are debated.</li>
  <li><strong>Annual or bi-annual summits</strong>: These are the architecture equivalent of Comic-Con, with several days of intense knowledge sharing and workshops.</li>
  <li><strong>Ad-hoc workshops</strong>: These focus on specific topics and deep dives into niche subjects.</li>
</ul>

<p>While the central team can provide essential support, all communities must take the initiative and get as many people as possible involved in these events. It’s crucial that people are active participants rather than passive spectators to ensure more engagement and commitment. So, get ready to roll up your sleeves and dive in, because architecture is a team sport, and everyone needs to play their part!</p>

<h3 id="embracing-diverse-team-structures">Embracing Diverse Team Structures</h3>

<p>When building architecture guilds and virtual architecture teams, it’s crucial to acknowledge that organizational units have diverse structures and sizes. In big organizations, <strong>embracing diversity</strong> is a prerequisite to having a broad impact.</p>

<div class="quote">
In big organizations, embracing diversity is a prerequisite to having a broad impact.
</div>

<p>There is no one-size-fits-all solution for assigning architecture responsibilities within departments. Based on Gregor Hohpe’s view of architects and their teams’ relationships, I’ve generally encountered three types of team-architect systems:</p>

<ol>
  <li>
    <p><strong>Benevolent “dictator”</strong>: An architect or architecture team tells developers what to do or how to do things. The key nuance here is whether the communication is unidirectional or bi-directional.</p>
  </li>
  <li>
    <p><strong>Primus inter pares (first among equals)</strong>: Architects are embedded within teams where each is just another team member, but with a focus on the system structure and trade-offs and taking a longer-term view than other team members.</p>
  </li>
  <li>
    <p><strong>Architecture without architects</strong>: Architecture is done within teams, but the task is a shared responsibility among multiple (or all) team members. This approach is often the preferred model in modern technology organizations.</p>
  </li>
</ol>

<p>Remember, there is no magic bullet. Different structures work for various organizations; sometimes, the best solution is a mix of these approaches.</p>

<p><br /></p>
<h2 id="building-people-foundation">Building People Foundation</h2>

<p>While each organization will need its unique approach, here are some tips I found helpful when forming architecture teams and building a “<a href="people">People Foundation</a>”:</p>

<ul>
  <li>
    <p>Before making grandiose plans for reorganizations, <strong>connect with the people already doing architectural work</strong> in an organization. Think of it like forming a superhero team: bring together all the critical tech leaders, regardless of their position and title. You never know when you’ll need an architectural Batman or Wonder Woman. Being well-connected to these folks will be crucial in any architecture organization, so this effort is like adding a secret weapon to your utility belt.</p>
  </li>
  <li>
    <p>If creating a virtual team is part of your architecture strategy, move away from the informal community of practice and start <strong>building a team with more accountability and responsibility</strong>.</p>
  </li>
  <li>
    <p><strong>Connect with non-architecture stakeholders</strong> early to gain broader support for building architecture teams and guilds. Imagine it as building alliances in a grand strategy game; you need their support to conquer the world of architecture. Being well-connected to these stakeholders is crucial, so think of it as adding allies to your quest.</p>
  </li>
  <li>
    <p><strong>Avoid hiring <a href="https://architectelevator.com/transformation/dont-hire-hitman/">a digital hitman</a></strong>. Instead, invest in growing internal talent. Think of it this way: architects need to know the technology, the domain, and the organization.</p>
  </li>
  <li>
    <p><strong>Externalize</strong>. Reach out and connect. Participate in external events. Publish your work. Being strong externally can help you grow and attract architectural talent. Everyone wants to join the band when you’re rocking the stage.</p>
  </li>
</ul>

<p><img src="assets/images/arch/pyramid-g88f894074_1920.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/chantellev-2412495/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1336120">Chantellev</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1336120">Pixabay</a>
</div>

<p><br /></p>
<h2 id="to-probe-further">To Probe Further</h2>

<ul>
  <li><a href="https://architectelevator.com/transformation/agile_architecture/">Agile and Architecture: Friend, not Foe</a><br /> by Gregor Hohpe, August 2020.</li>
  <li><a href="https://www.mckinsey.com/business-functions/mckinsey-digital/our-insights/tech-forward/crafting-the-optimal-model-for-the-it-architecture-organization">Crafting the optimal model for the IT architecture organization</a><br /> by Christian Lilley et al., April 2022</li>
  <li><a href="https://blog.pragmaticengineer.com/developers-mentoring-other-developers/">Developers mentoring other developers: practices I’ve seen work well</a><br /> by Gergely Orosz, August 2022.</li>
</ul>

<p><br /></p>
<h2 id="questions-to-consider">Questions to Consider</h2>

<p>It is difficult to overestimate the importance of people for architecture practice, yet many organizations take architectural talent for granted. To reflect on the importance of carefully organizing, empowering, and leveraging scarce architecture talent, ask yourself the following questions:</p>

<ul>
  <li><em>Reflect on your organization’s current architecture function. Do you have a strong network of architects across the organization?</em></li>
  <li><em>How do you ensure architects’ competency, empowerment, and motivation in your organization? What systems do you have in place to develop architectural talent?</em></li>
  <li><em>Which central, federated, or hybrid model best represents your current architectural function? Why was this model chosen, and how effective has it been for your organization?</em></li>
  <li><em>If you are part of a central architecture team, how would you support the rest of the organization? How would you contribute to the global architecture function if you were part of a distributed virtual team?</em></li>
  <li><em>Consider having the roles of central architecture teams and federated architecture teams in your organization. How would they complement each other?</em></li>
  <li><em>How effective is the current division of responsibilities among architects in your organization? Are there areas of overlap or gaps in coverage?</em></li>
  <li><em>What steps has your organization taken to ensure architects are well-connected across all parts and levels? What impact has this had on transparency and the implementation of changes?</em></li>
  <li><em>Reflect on the diversity of team structures within your organization. How does this diversity impact the roles and responsibilities of architects?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[We should not take our architectural talent for granted. Architects, and other people doing architecture work, are bridging local business, product, organizational, and technology issues. Architects are difficult to hire because they need in-depth technical, domain-specific, and organizational knowledge. Therefore, we must support, organize, and leverage architecture talent.]]></summary></entry><entry><title type="html">Architecture Activities Platform</title><link href="http://localhost:4000/activities" rel="alternate" type="text/html" title="Architecture Activities Platform" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/activities</id><content type="html" xml:base="http://localhost:4000/activities"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/parliament-366199_1920.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/cocoparisienne-127419/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=366199">Anja</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=366199">Pixabay</a>
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>  Understand what activities you can do as a part of architecture practice and get tips on creating pragmatic operating models for an architecture practice.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>The Architecture Activities Platform is a system of processes and agreements enabling architects to do everything architecture typically does, leveraging Data and People Foundations to create a data-informed, organization-wide impact.</li>
    <li>Examples of activities include: supporting teams in their daily work; tracking tech debt, defining tech debt reduction programs; performing technical due diligence; standardizing processes and documentation; defining cloud, data, and platform strategies.</li>
  </ul>
</blockquote>
<style>
    .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 140%;
     font-style: normal;
     color:#888;
    }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
    h3 {
      margin-top: 30px;    
    }
</style>

<p><br />
Each organization will have different architectural needs and contexts. When forming architecture functions, I use as a starting point these <a href="https://architectelevator.com/architecture/organizing-architecture/">two pieces of advice from Gregor Hohpe</a>:</p>

<ul>
  <li><em>“Your architecture team’s job is to <strong>solve your biggest problems</strong>. The best setup is the one that allows it to accomplish that.”</em></li>
  <li><em>“Your organization has to earn its way to an effective architecture function. <strong>You can’t just plug some architects into the current mess</strong> and expect it to solve all your problems.”</em></li>
</ul>

<p>Considering Gregor Hohpe’s previous two points, I approach defining an architecture practice with the mindset that there is no one-size-fits-all method. You must find your own activities and operating models to enable architecture to solve the most critical problems.</p>

<div class="quote">
There is no one-size-fits-all approach: each organization must find activities and operating models that enable architecture to solve the most critical problems.
</div>

<p>No matter which operating models you select, it’s crucial to develop <strong>explicit agreements</strong> and “rules of engagement” with key stakeholders. This collaborative approach is essential to create a sustainable and practical architectural function. It’s like establishing the house rules for game night; everyone’s input is valued and necessary to keep things fun and functional.</p>

<p><img src="assets/images/model-strategy.png" alt="" />
<em><strong>Figure 1:</strong> The structure of Grounded Architecture: Architecture Activities Platform.</em></p>

<p>The Architecture Activities Platform (Figure 1) is a set of processes and agreements that allows architects to do everything architecture practice typically does. It leverages Data and People Foundations to develop a data-informed, organization-wide impact. Data and People Foundations provide a basis for data-informed decision-making well embedded in the organization. It’s about instilling confidence and trust in your decision-making process.</p>

<p><br /></p>
<h2 id="examples-of-architecture-activities">Examples of Architecture Activities</h2>

<p>To provide a clearer understanding of what I mean by an Architecture Activities Platform, here are detailed examples of the activities I have been engaged in with architects.</p>

<p><strong>Designing Mechanisms for Teams to Make Better Decisions</strong>
    - This involves creating global decision-support frameworks such as advisory forums, which facilitate informed discussions across teams. For compliance-sensitive projects, we establish formal design authorities. Additionally, we develop team-specific mechanisms, like escalation paths, to resolve decision conflicts effectively (e.g., when teams disagree on a common messaging middleware).</p>

<p><strong>Supporting Teams in Their Daily Work</strong>
    - This entails integrating into key team activities, aligning architectural work with team rituals to provide timely support. We assist teams during all critical phases, such as reviewing architecture proposals before the commencement of a project or sprint, ensuring alignment with overall architectural standards.</p>

<p><strong>Supporting Planned New Initiatives and Projects</strong>
    - Ensuring seamless alignment between projects that require multi-team collaboration is crucial. We work to facilitate communication and coordination, ensuring all teams are on the same page regarding project goals and requirements.</p>

<p><strong>Supporting Teams in Dealing with the Legacy Landscape</strong>
    - We provide data and insights about the legacy landscape, identifying problematic areas such as frequently changed, low-quality, untested legacy code. We help define scenarios and roadmaps for legacy modernization, ensuring a structured approach to updating and maintaining legacy systems.</p>

<p><strong>Tracking Tech Debt and Defining Tech Debt Reduction Programs</strong>
    - This involves creating a centrally aligned backlog of technical debt and defining programs for its reduction. We integrate these programs into the planning processes to ensure that tech debt is managed proactively and effectively.</p>

<p><strong>Performing SWOT and Other Analyses of Platforms and Systems</strong>
    - Conducting deep dives to understand specific areas of the technology landscape, We perform SWOT (Strengths, Weaknesses, Opportunities, Threats) analyses and other assessments. These analyses help in creating comprehensive plans and roadmaps for improvement.</p>

<p><strong>Standardizing Processes and Documentation</strong>
    - We define standard templates for key documents such as Architectural Decision Records (ADRs), Technical Design Reviews (TDRs), and common diagrams. This standardization ensures consistency and clarity across all architectural documentation.</p>

<p><strong>Supporting Merger and Acquisition (M&amp;A) Activities with Expertise and Analyses</strong>
    - We provide analyses, recommendations, and integration planning for mergers and acquisitions. My support ensures that architectural considerations are well-integrated into M&amp;A activities, facilitating smoother transitions and integrations.</p>

<p><strong>Defining Key Technology Strategies</strong>
    - We contribute to the development of essential technology strategies, including those for Cloud, Data, and Platforms. These strategies provide a clear roadmap for technological development and investment, ensuring alignment with business goals.</p>

<p><strong>Defining Vision and Direction of Technology</strong>
    - In collaboration with Engineering Leaders, We work on creating a sustainable organizational setting that aligns with the overarching technology strategies. This involves setting a clear vision and direction for the technology landscape within the organization.</p>

<p>These activities collectively form an Architecture Activities Platform, enabling a structured and strategic approach to architectural practices within the organization.</p>

<p><br /></p>
<h2 id="guiding-principles-for-architectural-excellence-policies-autonomy-and-engagement">Guiding Principles for Architectural Excellence: Policies, Autonomy, and Engagement</h2>

<p>In this section, I address different guiding principles of architectural work. The operating model emphasizes a collaborative and supportive approach. Architects empower development teams to make most decisions while ensuring strategic alignment and minimal compatibility. Architects engage early in processes to avoid bureaucratic delays, focus on constant motion between daily support and strategic tasks, and use data to inform decisions. The distributed decision-making model promotes team autonomy complemented by high transparency and alignment, guided by principles that balance autonomy with global consistency. The “Golden Paths” concept enhances uniformity and efficiency.</p>

<h3 id="high-level-operating-model">High-Level Operating Model</h3>

<p>While exact activities and their scope will depend on an organization setting and will change over time, I usually followed a common operational model in daily work inspired by Gregor Hohpe’s strategy-principles-decisions model (Figure 2).</p>

<div>
<a href="assets/images/arch/architecture-system.png" target="_blank">
    <img src="assets/images/arch/architecture-system.png" />
</a>
</div>
<p><strong>Figure 2:</strong> <em>A common operating model I typically use for Grounded Architecture activities.</em></p>

<p><br /></p>

<p>Here are the key characteristics of this operating model.</p>

<p><strong>Engagement mindset</strong>:</p>
<ul>
  <li>Architects engage with stakeholders and product and project teams in a <strong>collaborative and supportive manner</strong>.</li>
  <li>Architects aim to <strong>empower the teams</strong> so that they make most of the decisions.</li>
</ul>

<p><strong>Contributions of architects</strong>:</p>
<ul>
  <li><strong>Bring relevant data</strong> to inform decisions leveraging a <a href="data">Data Foundation</a>.</li>
  <li><strong>Define decision boundaries</strong> to enable minimal compatibility and strategic alignment (e.g., public cloud provider, golden paths, or tech stack constraints).</li>
  <li><strong>Define fundamental principles</strong> to facilitate consistency in decision-making.</li>
  <li><strong>Share and generalize</strong> lessons learned via a <a href="people">People Foundation</a>.</li>
</ul>

<p><strong>Social dynamics of architects</strong>:</p>
<ul>
  <li>Architects spend their time in <strong>constant motion</strong> between supporting teams’ <strong>daily work</strong> and working on <strong>strategic topics</strong>, helping the organization achieve alignment between strategy and implementation.</li>
</ul>

<p><strong>Shift left</strong>:</p>
<ul>
  <li>Avoid <strong>formal bureaucratic approval</strong> processes, where architects appear too late and are frequently busy approving trivial decisions.</li>
  <li>Have architects <strong>involved early</strong> in any of the processes, such as during the planning and preparation stages, where it is possible to make more significant changes. Think of it as having the architects as early birds catching the architectural worms, making big changes before the day officially starts.</li>
</ul>

<p><br /></p>
<h3 id="distributing-decisions-autonomy-and-alignment">Distributing Decisions, Autonomy, and Alignment</h3>

<p>With any operating model, I aim to keep architectural decision-making distributed across the organization and embedded in the development teams. Development <strong>teams traditionally have the best insights and most information</strong> relevant for making decisions. As noted by Gregor Hohpe, the worst case of organizational decision-making happens when people with relevant information are not allowed to make decisions, while people who lack sufficient information make all decisions. Grounded Architecture aims to make relevant information more readily available to a broader audience and better connect people when making decisions.</p>

<div class="quote">
Grounded Architecture aims to make relevant information more readily available to a broader audience and better connect people when making decisions.
</div>

<p>While I aim to create a mechanism to give teams autonomy, autonomy does not mean that teams are alone and do not align with anyone, do not get feedback from anyone, and do whatever they want. Teams must complement autonomy with high transparency and proactivity in alignment with other groups.</p>

<p>To give maximal autonomy to the teams while maintaining a <strong>minimal</strong> level of global <strong>alignment and compatibility</strong>, I have sometimes implemented the concept of a <strong>decision pyramid</strong>  (Figure 3).</p>

<p>The <strong>decision pyramid</strong> highlights that development teams should make most decisions. However, several strategic and area-level choices may provide team decision boundaries. For example, selecting the public cloud provider is typically a CTO-level strategic decision. Similarly, engineering leaders in some areas may want to limit some choices, such as the number of programming languages, to more easily train new people, maintain code, and support moves between teams.</p>

<p><img src="assets/images/arch/decision-pyramid.png" alt="" />
<em><strong>Figure 3:</strong> A decision pyramid. The development teams should make most decisions. However, several strategic and area-level decisions may provide decision boundaries for teams (e.g., a public cloud provider).</em></p>

<h3 id="general-architecture-decision-policy">General Architecture Decision Policy</h3>

<p>Distributed decision-making scales well, but it can lead to chaos if entirely uncoordinated. Some decision policies are needed. Inspired by the famous <strong><a href="https://hbr.org/2014/01/how-netflix-reinvented-hr">Netflix expense policy</a></strong>, <em>“Act in Netflix’s best interests”</em>, I frequently argued that architecture decision policy could similarly be summarized in six words:</p>

<p><img src="assets/images/arch/decision-policy.png" alt="" /></p>

<p>What I mean by that is that <strong>anyone can make architecture decisions</strong>, provided that, in addition to their specific requirements, they also think about the <strong>impact of their choices</strong> on:</p>

<ul>
  <li><strong>Overall organizational complexity</strong>: Technology is more manageable by limiting tech diversity, size, and dependencies. Limiting technology choices reduces the attack surface with fewer third-party dependencies and tool ecosystems (build, testing, etc.).</li>
  <li><strong>Ease of moving people</strong> between teams (both to get help and help others, get promoted): Do not unnecessarily create exotic islands with few experts in technologies not supported or widely used in the organization. People cannot get help or move across the organization as their expertise may be useless outside the team.</li>
  <li><strong>Ease of training and onboarding</strong> of internal and external developers: Using conventional technologies, supported with external learning resources (books, tutorials, StackOverflow) significantly helps find and grow experts.</li>
  <li><strong>Talent density</strong> and the possibility of performing at the world-scale level: Building world-scale technology and scaling requires in-depth knowledge and fine-tuning. It cannot be achieved with only a few in-house experts.</li>
  <li>New <strong>reorganizations</strong>: If the ownership of components changes (e.g., another team is taking it over), would your choices fit with other components from other areas?</li>
  <li>Reducing global <strong>duplication of effort</strong> and inefficiencies: Are you doing the work others are doing? Can others reuse your work? Can you reuse the work of others?</li>
</ul>

<p>While it may not always be enough, this simple policy resonates well. It encourages people to be more thoughtful when making decisions.</p>

<p><br /></p>
<h3 id="golden-paths">Golden Paths</h3>

<p>I have found that the concept of Golden Paths provides an excellent ground to drive alignment and collaboration in architecture activities. Golden Paths is an approach utilized to streamline and unify the development process within a software ecosystem, aiming to tackle fragmentation and foster consistency, inspired by <a href="https://engineering.atspotify.com/2020/08/how-we-use-golden-paths-to-solve-fragmentation-in-our-software-ecosystem/">Spotify’s implementation</a>. Golden Paths can be described as “<strong>opinionated and supported</strong>” routes developers can follow to build systems efficiently and effectively.</p>

<p><img style="" src="assets/images/spotify-golden-paths_infrastructure-and-tooling-700x327.png" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by engineering.atspotify.com
</div>

<p>Golden paths provide a solid <strong>foundation for aligning</strong> architecture activities, serving as a common target of work for Guilds and central architectural teams. Rather than being solely knowledge-sharing entities, guilds can be empowered to develop golden paths, serving as an excellent catalyst for more effective community engagement. This approach not only enhances the role of guilds but also increases the adoption of golden paths as they are created collaboratively.</p>

<p>Golden Paths can be crucial to an organization’s IT development landscape as a deliberate and strategic effort to promote uniformity, efficiency, and reliability. By advocating for a set of preferred technologies and practices that are well-supported, secure, and aligned with the organization’s broader objectives, Golden Paths can guide developers to build less fragmented, and faster-to-develop software. Ultimately, this leads to higher-quality and more maintainable IT systems.</p>

<p><br /></p>
<h2 id="setting-boundaries">Setting Boundaries</h2>

<p>One of the amusing challenges with setting up an architecture function in an organization is that everyone seems to have a different idea of what “architecture” should entail. It’s like asking people to describe a unicorn: some imagine a mythical, majestic creature, while others picture a sparkly horse with a horn that grants wishes. Good architects can do many things, but this versatility might not always be the most effective way to support the organization. We need to <strong>set boundaries</strong> so that we can focus on what’s important rather than becoming frazzled by what’s not.</p>

<p><br />
<img src="assets/images/unicorn.png" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/gdj-1086657/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1302152">Gordon Johnson</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1302152">Pixabay</a>
</div>
<p><br /></p>

<p>To be effective, I’ve found it crucial to establish and clearly communicate some “<strong>rules of engagement</strong>” (ROE). Think of ROE as the office playbook for how architects should operate. In a corporate setting, ROE are the principles that guide how employees and departments interact with each other, clients, and stakeholders. This includes communication protocols, decision-making processes, and conflict-resolution mechanisms. Essentially, ROE sets the stage for what’s expected and what’s not, ensuring everyone plays nicely and fairly.</p>

<p>While you may need to tailor these rules to fit your organization, I found it helpful to set expectations for what the team should be able to do to qualify for the architecture support. Here’s a handy list of expectations for teams seeking architecture support. This also helps clarify what architecture practice isn’t supposed to do:</p>

<ol>
  <li>
    <p><strong>Organizational Awareness and Connections:</strong> Teams should know all relevant stakeholders and actively engage with them. This includes product, development, and business stakeholders. Planning should be collaborative across all affected teams, with active working relationships with global functions like QA, DevOps, or Security.</p>
  </li>
  <li>
    <p><strong>Enough Capacity and Skills:</strong> Teams should have adequate development capacity with the right skills and seniority to innovate and maintain their products.</p>
  </li>
  <li>
    <p><strong>Strategic Awareness:</strong> Teams should understand the organization’s strategic goals, technologies, and other relevant strategies, and know their role within these frameworks.</p>
  </li>
  <li>
    <p><strong>Technical Documentation Literacy:</strong> Teams should be capable of creating technical documentation, such as ADRs (Architecture Decision Records) or RFCs (Request for Comments).</p>
  </li>
  <li>
    <p><strong>Technology Standard Awareness:</strong> Teams should be familiar with the organization’s technology standards, including golden paths and guidelines for planning, documentation, security, DevOps, and QA processes.</p>
  </li>
  <li>
    <p><strong>Participation and Citizenship:</strong> Teams should actively participate in relevant communities (like architecture guilds) and global events (such as architecture summits).</p>
  </li>
  <li>
    <p><strong>Tech Debt Management:</strong> Teams must be aware of the technical debt they create and maintain, ideally having a tech debt backlog and a plan for “paying” it back.</p>
  </li>
</ol>

<p>Aligning on these rules with the teams helps ensure productive conversations about architectural support. When these conditions are met, architecture practice can help teams level up. When they’re not, architecture support can’t be as effective. However, that doesn’t mean struggling teams are left in the lurch. Architecture can help teams meet these expectations but can’t compensate for their total lack. Teams need to take the initiative and lead. For instance, it’s impractical to have architects working full-time for months with one team as their senior developer. However, architects can coach and help developers grow. Similarly, architects can assist in building relationships with other teams, but the teams themselves need to be active and engaged.</p>

<p>So, set those expectations, establish your rules of engagement, and watch as your architecture function goes from a sparkly unicorn to a well-oiled machine!</p>

<p><br /></p>
<h2 id="to-probe-further">To Probe Further</h2>

<ul>
  <li><a href="https://martinfowler.com/articles/scaling-architecture-conversationally.html">Scaling the Practice of Architecture, Conversationally</a> <br />by Andrew Harmel-Law, December 2021</li>
  <li><a href="https://blog.pragmaticengineer.com/scaling-engineering-teams-via-writing-things-down-rfcs/">Scaling Engineering Teams via RFCs: Writing Things Down</a> <br />by Gergely Orosz, September 2022</li>
</ul>

<p><br /></p>
<h2 id="questions-to-consider">Questions to Consider</h2>

<p>Your architecture practice job is to solve the biggest problems in your organization. Ask yourself the following questions:</p>

<ul>
  <li><em>How can you identify the most critical problems that your architects need to solve in your organization?</em></li>
  <li><em>What activities and operating models can you think of that will best enable architecture in your organization to work on these critical problems?</em></li>
  <li><em>What does the Architecture Activities Platform look like in your organization, and how could it be improved?</em></li>
  <li><em>Which of the provided examples of architectural activities are you currently performing in your organization?</em></li>
  <li><em>How does the proposed common operating model align with your current operational practices in your organization? What changes might be necessary to adopt this model?</em></li>
  <li><em>In your experience, how early are architects involved in projects and activities? Do you agree with the goal of ‘shifting left’ the architecture work?</em></li>
  <li><em>How are architectural decisions distributed across your organization currently? How could this process be improved to ensure the people with the most relevant information make the decisions?</em></li>
  <li><em>Reflect on the balance of autonomy and alignment in your organization. How could you better implement a mechanism to give teams autonomy while maintaining alignment and compatibility with global strategy?</em></li>
  <li><em>How does the concept of a decision pyramid resonate with you? How is it reflected in your current organization, and how could it be better implemented?</em></li>
  <li><em>Which strategic and area-level decisions provide team decision boundaries in your organization? Are there areas where you need more or less limitations to optimize performance?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[The Architecture Activities Platform is where, by leveraging data and People Foundations, we perform activities that help an organization reach its goals. Here are examples: supporting teams in their daily work; tracking tech debt; defining tech debt reduction programs; performing technical due diligence; standardizing processes and documentation; defining cloud, data, and platform strategies.]]></summary></entry><entry><title type="html">Transforming Organizations with Grounded Architecture</title><link href="http://localhost:4000/transformation" rel="alternate" type="text/html" title="Transforming Organizations with Grounded Architecture" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/value</id><content type="html" xml:base="http://localhost:4000/transformation"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/iStock-1893527682.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by iStock
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>  Understand the value that architecture practice based on the ideas of Grounded Architecture can create for an organization.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>When a Grounded Architecture structure is in place, it can positively transform an organization’s functioning.</li>
    <li>These impact categories are Executing At Scale, Improving the Quality of Decision-Making with Data, Maximizing Organizational Alignment &amp; Learning, and Higher Adaptivity.</li>
  </ul>
</blockquote>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 140%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br />
When a Grounded Architecture structure is in place, it can positively transform an organization’s functioning. These categories of impact, aligned with <a href="goals">defined goals</a>, are:</p>

<ul>
  <li>Enabling Execution of Architecture Function At Scale,</li>
  <li>Increasing Architecture Function Adaptivity,</li>
  <li>Improving the Quality of Decision-Making with Data,</li>
  <li>Maximizing Organizational Alignment, and</li>
  <li>Maximizing Organizational Learning.</li>
</ul>

<p><br /></p>
<h2 id="executing-at-scale">Executing at Scale</h2>

<p>Our first goal was to find a way to support hundreds of teams and thousands of projects with significant complexity and diversity. 
<br />
<br />
<img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/earth-g8ffaadaba_1920.png" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/wikiimages-1897/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=11595">WikiImages</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=11595">Pixabay</a>
</div>

<p>Each element of Grounded Architecture enables architecture function to operate at scale in several ways.</p>

<h3 id="data-foundation">Data Foundation</h3>
<p>The <strong>Data Foundation</strong> can support large-scale operations by:</p>

<ul>
  <li><strong>Self-Service Data Access</strong>: Providing data as a self-service resource allows teams to access the information they need independently, reducing the reliance on manual sharing methods. This can be facilitated through internal websites or portals where data tools and insights are readily available.</li>
  <li><strong>Elimination of Meetings</strong>: We significantly reduced the need for numerous information-sharing or data-gathering meetings using automated data tools (every time we added a new data app, I got a few hours back in my calendar and had fewer Slack messages). This reduction saves time and ensures that data is consistently up-to-date and accessible.</li>
  <li><strong>Automation</strong>: Automation minimizes manual effort, which is crucial as manual processes do not scale efficiently. Automating data management processes ensures that data can be collected, processed, and analyzed without extensive human intervention.</li>
</ul>

<h3 id="people-foundation">People Foundation</h3>
<p>The <strong>People Foundation</strong> enhances execution at scale by focusing on:</p>

<ul>
  <li><strong>Developing Connections</strong>: Building strong relationships at all levels of the organization is crucial. This network facilitates quicker alignment of objectives, efficient information sharing, and swift execution of shared decisions.</li>
  <li><strong>Speeding Up Alignment</strong>: Effective communication channels and collaborative tools help align teams rapidly, ensuring everyone is on the same page and working towards common goals.</li>
  <li><strong>Facilitating Shared Decisions</strong>: Enabling a culture where shared decisions are made quickly can enhance the responsiveness and adaptability of the organization.</li>
</ul>

<h3 id="architecture-activities-platform">Architecture Activities Platform</h3>
<p>The <strong>Architecture Activities Platform</strong> promotes scalability by:</p>

<ul>
  <li><strong>Distributed Decision-Making</strong>: Encouraging organizational decision-making prevents bottlenecks associated with centralized decision-making processes. This empowers more people to take ownership and make decisions within their scope, leading to faster and more effective outcomes.</li>
  <li><strong>Promoting a Collaborative Operating Model</strong>: An operating model that supports distributed decision-making and collaboration ensures that the organization can handle more projects simultaneously without overburdening any single entity or individual.</li>
</ul>

<p>By leveraging these foundations, we managed the complexities and diversity of numerous projects and teams more efficiently, ensuring scalability and effective execution.</p>

<p><br /></p>
<h2 id="adaptivity">Adaptivity</h2>

<p>The second goal, ensuring that architectural functions can adapt quickly to stay relevant in new contexts, is crucial for maintaining an organization’s agility and resilience.</p>

<p><br />
<img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/lego-g7d6cf2046_1920.png" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/painter06-3732158/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3388163">Francis Ray</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3388163">Pixabay</a>
</div>

<p>The Grounded Architecture structure has core elements that provide a highly flexible and adaptive setting. Here are the key drivers of flexibility within this structure:</p>

<h3 id="data-foundation-1">Data Foundation</h3>

<p>The <strong>Data Foundation</strong> can support adaptability by:</p>

<ul>
  <li><strong>Automation and Extensibility</strong>: We could swiftly extend and reconfigure our data infrastructure by implementing a highly automated Data Foundation to accommodate changes. For example, this could involve integrating new source code repositories and data sources following acquisitions or mergers. Automation ensures that data remains relevant and up-to-date, providing essential connections and feedback tailored to the organization’s evolving needs.</li>
  <li><strong>Configurable Adaptation to Organizational Changes</strong>: A robust Data Foundation adapts its views to the changing realities of different parts of the organization, ensuring that data insights are always aligned with current operational contexts.</li>
</ul>

<h3 id="people-foundation-1">People Foundation</h3>

<p>The <strong>People Foundation</strong> can support adaptability by:</p>

<ul>
  <li><strong>Capacity Redistribution</strong>: The People Foundation, through a central team, can alleviate the temporary capacity shortages experienced by distributed teams. This ensures that architectural functions continue to operate smoothly even during periods of high demand or limited resources.</li>
  <li><strong>Decentralized Support</strong>: By maintaining a network of well-connected architects, the architecture function can support the organization effectively without relying solely on a central team. This decentralization fosters resilience and adaptability, enabling architectural guidance and oversight across various teams and projects.</li>
</ul>

<h3 id="architecture-activities-platform-1">Architecture Activities Platform</h3>

<p>The <strong>Architecture Activities Platform</strong> can support adaptability by:</p>

<ul>
  <li><strong>Flexible Decision-Making</strong>: The Architecture Activities Platform supports adaptivity by promoting a flexible setting and distributing decision-making authority throughout the company. This distribution helps prevent the architecture function from becoming a bottleneck or a single point of failure.</li>
  <li><strong>Delegation of Architectural Decisions</strong>: Senior architects can delegate most architectural decisions to teams, allowing them to focus on critical strategic initiatives. This includes defining cloud, data, or platform strategies and supporting significant decisions related to mergers and acquisitions.</li>
</ul>

<p>By grounding the architecture with data and people connections, organizations empower senior architects to concentrate on high-impact areas. This structure enhances the architectural function’s flexibility and adaptivity. It ensured we could respond promptly and effectively to new challenges and opportunities.</p>

<p><br /></p>
<h2 id="improving-the-quality-of-decision-making-with-data">Improving the Quality of Decision-Making with Data</h2>

<p>The third goal stated that we need tools and mechanisms to make a decision process more data-informed and less dependent on opinions. There are significant benefits to making our decision process as much as possible data-driven. Architectural <strong>discussions can be heated and opinionated</strong>, not leading to the best arguments and decisions.</p>

<p><br />
<img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/doors-gf67a9cff2_1920.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/qimono-1962238/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1767563">Arek Socha</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1767563">Pixabay</a>
</div>

<p>To make the decision process more data-informed and less dependent on opinions, we need to focus on the interplay between three foundational elements. These elements collectively create a robust framework for data-driven decision-making in architectural discussions.</p>

<h3 id="data-foundation-2">Data Foundation</h3>

<p>The <strong>Data Foundation</strong> ensures the availability and readiness of data needed for decisions, fueling data-informed discussions and decision-making via:</p>

<ul>
  <li><strong>Data Collection:</strong> Systematically gather high-quality data on relevant internal and external technology developments.</li>
  <li><strong>Data Management:</strong> Maintain a well-organized and easily accessible database that supports quickly retrieving relevant data.</li>
  <li><strong>Data Analytics:</strong> Employ advanced analytics tools to process and interpret the data, providing meaningful insights to support decisions.</li>
  <li><strong>Real-Time Data Availability:</strong> Ensure that data is updated regularly and available in real-time to inform ongoing discussions and decisions.</li>
</ul>

<h3 id="people-foundation-2">People Foundation</h3>

<p>Data is not enough; you need to make this data available to and used by critical people. The <strong>People Foundation</strong> ensures people are available and well-connected to share information and make decisions via:</p>

<ul>
  <li><strong>Expert Network:</strong> Establish and maintain a network of knowledgeable experts and stakeholders who can provide insights on various architectural aspects.</li>
  <li><strong>Collaboration Tools:</strong> Implement collaboration tools that facilitate seamless communication and information sharing among team members.</li>
  <li><strong>Training and Development:</strong> Provide training programs to enhance the data literacy and analytical skills of architects and decision-makers.</li>
  <li><strong>Engagement Practices:</strong> Develop practices for regularly engaging stakeholders and ensuring their input is considered in decision-making.</li>
</ul>

<h3 id="architecture-activities-platform-2">Architecture Activities Platform</h3>

<p>The <strong>Architecture Activities Platform</strong> provides processes that enable architects to move from opinion-based decisions to data-driven economic risk modeling via:</p>
<ul>
  <li><strong>Process Implementation:</strong> Implement processes that guide architects in dismantling hype and buzzwords, presenting problems clearly, and making data-driven decisions.</li>
  <li><strong>Data Integration:</strong> Develop methodologies for integrating relevant data into discussions, ensuring that data supports and guides the conversation.</li>
  <li><strong>Economic Risk Modeling:</strong> Create models that translate drivers and data into economic risk assessments, helping to identify the best solutions for the given business context.</li>
  <li><strong>Decision Support Tools:</strong> Deploy tools and technologies that assist in visualizing data, modeling risks, and objectively evaluating options.</li>
</ul>

<p>Focusing on these foundational elements and their key actions can transform our architectural discussions into a more data-informed process. This focus ultimately led us to better, more objective decision-making that aligns with our business context and goals.</p>

<p><br /></p>
<h2 id="maximizing-organizational-alignment">Maximizing Organizational Alignment</h2>

<p>The fourth goal emphasizes that the architecture function should be a cohesive factor in minimizing misalignments within large organizations.</p>

<p><img src="assets/images/arch/iStock-165954660.jpg" alt="" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by iStock
</div>

<p>Misalignments often occur in such settings due to various factors, including complex structures and diverse objectives. However, a well-grounded architecture can address and reduce these misalignments through its foundations.</p>

<h3 id="the-data-foundation">The Data Foundation</h3>

<p>The <strong>Data Foundation</strong> improves organization alignment by <strong>creating transparency</strong>. By establishing a robust data foundation, organizations can enhance transparency, which is necessary for building trust and facilitating alignment. This involves making data easily accessible and understandable across different departments, ensuring everyone has the same information and can make informed decisions. Transparent data practices help align objectives and actions, reducing the chances of misalignment.</p>

<h3 id="the-people-foundation">The People Foundation</h3>

<p>The <strong>People Foundation</strong> improves organization alignment by <strong>facilitating collaboration.</strong> The People Foundation focuses on developing global structures that connect employees across various functions and geographies. By making it easier for people to collaborate, share knowledge, and work together, this foundation helps create a unified approach to organizational goals. Collaborative environments foster alignment by ensuring that everyone is working towards common objectives.</p>

<h3 id="the-architecture-activities-platform">The Architecture Activities Platform</h3>

<p>The <strong>Architecture Activities Platform</strong> improves organization alignment by:</p>

<ul>
  <li>Facilitating <strong>pre-decision alignment</strong> via <strong>collaborative decision-making.</strong> This platform plays a pivotal role in minimizing misalignments by enabling individuals and teams working on similar projects or topics to identify each other and collaborate. This early alignment minimizes duplication of efforts and optimizes resource utilization, ensuring that efforts are aligned from the outset.</li>
  <li>Facilitating <strong>post-decision dissemination</strong> via <strong>knowledge sharing and more awareness.</strong> After decisions are made, the platform ensures that these decisions are communicated across the organization. This widespread dissemination helps all parts of the organization benefit from the insights and lessons learned from one unit, leading to more cohesive and aligned operations.</li>
</ul>

<p>An architecture function can reduce misalignments and drive a more unified, efficient, and aligned organization by integrating data transparency, enhanced collaboration, and structured processes for decision-making and dissemination.</p>

<p><br /></p>
<h2 id="maximizing-organizational-learning">Maximizing Organizational Learning</h2>
<blockquote>
  <p><em>“Good judgment comes from experience, and experience comes from bad judgment.”</em> – Fred Brooks</p>

  <p><em>” I expect you to learn to be better each day. I challenge you to look at each working day as an opportunity to learn more and, by doing so, to grow as a person.”</em> – L. David Marquet</p>
</blockquote>

<p>The last goal is that architecture should help organizations learn quickly, stay up-to-date with emerging technologies and industry trends, and recommend technology upgrades. Learning is one of the primary daily tasks of architects. Architects must proactively identify relevant new technology developments and create pragmatic technology recommendations for concrete platforms across the organization based on their understanding.</p>

<p><br />
<img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/iStock-871461580.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by iStock
</div>

<p>The Grounded Architecture structure offers comprehensive support through its Data Foundation, People Foundation, and Architecture Activities Platform to help organizations learn quickly, stay up-to-date with emerging technologies, and recommend technology upgrades.</p>

<h3 id="data-foundation-3">Data Foundation</h3>
<p>The Data Foundation plays a pivotal role in accelerating the learning and adoption of new technologies. Here’s how:</p>

<ul>
  <li><strong>Facilitating Exploration and Reflection</strong>: The Data Foundation enables individuals and teams to explore new tools and technologies effectively by providing relevant and comprehensive data. Access to this data allows for thorough experimentation, analysis of outcomes, and reflection, which is crucial for understanding and refining new technology implementations. For instance, it may not be easy to calculate the cost of a new cloud service. However, running proofs-of-concept and analyzing collected data can provide good insights.</li>
  <li><strong>Supporting Informed Decision-Making</strong>: Architects and teams can make informed decisions regarding technology adoption and upgrades with up-to-date data. This minimizes the risk associated with implementing new technologies and ensures that the choices are based on solid evidence and insights.</li>
</ul>

<h3 id="people-foundation-3">People Foundation</h3>
<p>The People Foundation enhances learning by creating and maintaining a culture of knowledge sharing. It achieves this through:</p>

<ul>
  <li><strong>Spaces for Sharing Knowledge</strong>: Regular update calls, knowledge-sharing sessions, and conferences are organized to facilitate the exchange of architectural and technological knowledge. These events are critical for informing the organization about the latest developments and best practices.</li>
  <li><strong>Maximizing Personal Learning</strong>: The People Foundation ensures that individual lessons are transformed into shared guidelines by deriving generalized insights from cross-group cases. This collective intelligence benefits the entire organization and fosters continuous personal and professional growth among team members.</li>
</ul>

<h3 id="architecture-activities-platform-3">Architecture Activities Platform</h3>
<p>The Architecture Activities Platform integrates learning into daily workflows through structured processes:</p>

<ul>
  <li><strong>Embedding Learning into Processes</strong>: Learning is accelerated by embedding it into the organization’s processes. This is achieved by defining and distributing knowledge-sharing and lesson-learned processes across the organization. By doing so, learning becomes a seamless part of daily activities rather than an additional task.</li>
  <li><strong>Systematic Knowledge Capture and Application</strong>: The platform ensures that knowledge is systematically captured, shared, and applied. This approach minimizes overhead while maximizing learning opportunities, enabling the organization to quickly adapt and apply new insights and technologies.</li>
</ul>

<p>By leveraging the Data Foundation, People Foundation, and Architecture Activities Platform, the Grounded Architecture structure ensures that learning is continuous, efficient, and embedded within the organization’s fabric. This comprehensive support system helps organizations stay up-to-date with emerging technologies and industry trends and fosters a proactive learning environment that drives innovation and growth.</p>

<p><br /></p>
<h2 id="questions-to-consider">Questions to Consider</h2>

<p>It is always essential to be thoughtful about the value and impact of your work. Ask yourself the following questions:</p>

<ul>
  <li><em>How effective is your organization’s current architectural function at scale? How valuable could principles of Grounded Architecture be in enhancing its efficiency?</em></li>
  <li><em>To what extent does your organization use data to inform architectural decisions? What steps could you take to move your organization from opinion-based to more data-driven decision-making?</em></li>
  <li><em>How well-aligned are the different areas within your organization, and how does this affect your architectural function? Could the Data and People Foundations principles be utilized to improve alignment?</em></li>
  <li><em>What strategies does your organization currently have to foster organizational learning? How could the methods described in the Grounded Architecture model enhance this?</em></li>
  <li><em>How quickly can your organization adopt and utilize new technologies? How could your architecture practice accelerate this process?</em></li>
  <li><em>Consider the adaptivity of your organization’s architectural function. How could your architecture practice improve it?</em></li>
  <li><em>Reflecting on the value of the “Data Foundation” concept, how effectively is your organization tracking changes or supporting what-if scenarios analysis?</em></li>
  <li><em>What role do most senior architects play in your organization? Could their time be better utilized on strategic initiatives?</em></li>
  <li><em>How sustainable is the architectural function in your organization in the absence of a strong central team? Could implementing a Data Foundation and well-connected architects help mitigate this?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[When Grounded Architecture structure is in place, it can have a significant positive impact on the functioning of an organization: Executing At Scale, Adaptivity, Improving the Quality of Decision-Making with Data, Maximizing Organizational Alignment & Learning.]]></summary></entry><entry><title type="html">Being Architect: Introduction</title><link href="http://localhost:4000/being-architect" rel="alternate" type="text/html" title="Being Architect: Introduction" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/being-architect</id><content type="html" xml:base="http://localhost:4000/being-architect"><![CDATA[<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/arch/architect-3979490_1920.jpg" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
Image by <a href="https://pixabay.com/users/borevina-9505414/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3979490">Borko Manigoda</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3979490">Pixabay</a>
</div>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 140%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>  Get an overview of guiding principles that generalize my view on what it means to be an architect in practice.</p>
</blockquote>

<p><br />
In this part of the book, I introduce several perspectives on what it means to be an architect in practice:</p>

<ul>
  <li><strong><a href="superglue">Architects as Superglue</a></strong>: Architects in IT organizations should develop as “superglue,” people who hold architecture, technical details, business needs, and people together across a large organization or complex projects.</li>
  <li><strong><a href="impact">Skills</a></strong>: A typical skillset of an architect includes hard (technical) skills, soft (people &amp; social) skills, and business skills.</li>
  <li><strong><a href="impact">Impact</a></strong>: Architects’ work is evaluated based on their impact on the organization. They must demonstrate that they identify, tackle, and deliver on strategic problems, have a deep and broad influence, and deliver solutions that few others can.</li>
  <li><strong><a href="career">Architects’ Career Paths: Raising the Bar</a></strong>: Architects’ career paths ideally stem from a strong engineering background. Hiring architects requires constantly raising the bar to ensure a strong and diverse team structure.</li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[I introduce guiding principles that generalize my view on what it means to be an architect in practice.]]></summary></entry><entry><title type="html">Architects as Superglue</title><link href="http://localhost:4000/superglue" rel="alternate" type="text/html" title="Architects as Superglue" /><published>2021-10-21T22:12:01+02:00</published><updated>2021-10-21T22:12:01+02:00</updated><id>http://localhost:4000/superglue</id><content type="html" xml:base="http://localhost:4000/superglue"><![CDATA[<style>
     h2 {
          margin-top: 40px;
     }
     h3 {
          margin-top: 40px;
     }
</style>

<p><img style="margin-top: -20px; width: 100%; height: 400px; object-fit: cover" src="assets/images/superglue/superglue.png" /></p>
<div style="font-size: 70%; margin-top: -16px; color: grey; margin-bottom: 12px">
</div>
<blockquote>
  <p><strong>IN THIS SECTION, YOU WILL:</strong>  Understand the view on architects as superglue (people who hold architecture, technical details, business needs, and people together across a large organization or complex projects) and get valuable tips on developing “superglue” abilities.</p>

  <p><strong>KEY POINTS:</strong></p>

  <ul>
    <li>Architects in IT organizations should develop as “superglue,” people who hold architecture, technical details, business needs, and people together across a large organization or complex projects.</li>
    <li>Architects need to be technically strong. But their unique strengths should stem from being able to relate technical issues with business and broader issues.</li>
    <li>Architects should stand on three legs: skills, impact, and leadership.</li>
  </ul>
</blockquote>
<style>
 .quote {
     border-left: 8px solid #d9ead3;
     padding-left: 36px;
     margin-top: 30px;
     margin-bottom: 40px;
     font-size: 140%;
     font-style: normal;
     color:#888;
 }
    @media only screen and (max-width: 768px) {
        [class="quote"] {
            display: none;
        }
    }
</style>

<p><br />
I believe architects in IT organizations should develop into “superglue.” I borrowed this concept from <a href="https://saturn2016.sched.com/event/63m9/cant-find-superheroes-to-help-you-out-of-a-crisis-how-about-some-architecture-and-lots-of-superglue">Adam Bar-Niv and Amir Shenhav from Intel</a>, who suggested that instead of needing superheroes, we need “superglue” architects—<strong>the people who hold architecture, technical details, business needs, and people together</strong> across large organizations or complex projects. More recently, Tanya Reilly presented a <a href="https://noidea.dog/glue">similar view</a> concerning software engineering roles.</p>

<p>Superglue architects act as the <strong>organizational connective tissue</strong>, linking the “<strong>business wheelhouse</strong>” with the “<strong>engine room</strong>.” While technical prowess is essential, their unique strength lies in their ability to relate, or glue, technical issues with business and broader organizational matters.</p>

<div class="quote">
Architects, of course, need to be technically strong. But their unique strengths should stem from being able to relate, or glue, technical issues with business and broader issues.
</div>

<p>Based on discussions with engineering leaders, engineers, and architects, Figure 1 illustrates the “superglue” metaphor for architects.</p>

<p>Architects must build strong relationships with developer teams, local business stakeholders, and various functions. Simultaneously, they need to be well-connected with broader internal communities. External visibility is also crucial, allowing architects to bring fresh ideas into the organization and promote the organization to the outside world.</p>

<p>In essence, while superheroes might be great for saving the day, it’s the superglue architects who keep everything together, ensuring that the whole machine runs smoothly. So, forget about donning a cape—grab a bottle of superglue and start connecting the dots!</p>

<p><br /></p>
<h2 id="supergluing-in-action-reducing-tension-among-business-functions-product-technology-organization">Supergluing in Action: Reducing Tension among Business Functions, Product, Technology, Organization</h2>

<p>The primary value of superglue architects in complex organizations is <strong>aligning business, product, technology, and organizational functions</strong>. Each of these four parts has its own designs or architectures.</p>

<p>Technology, product, organization, and business functions face specific challenges. Ideally, these structures all change simultaneously and stay in perfect sync. But in practice, these structures change and move at different speeds, leading to <strong>misalignment and tension among them</strong> (Figure 2). For example, we may organize teams using a well-defined domain model (organizational design). However, our IT system is a monolith (technical design). In that case, our teams will have many dependencies and collaborate in a different pattern than the organizational design suggests. On the other hand, if our teams are well-aligned with the technical domain model and implementation (e.g., teams have full ownership of microservices and can deploy them independently), but the product architecture differs from the microservice modularization (e.g., product features are grouped differently than the technical services supporting them), we may need to change dozens of microservices when introducing a relatively simple product change. Similarly, tension occurs when business objectives are misaligned with product or technology objectives (e.g., reducing short-term costs while adding new features and migrating to the public cloud).</p>

<div class="quote">
While technology, product, organization, and business functions face challenges, additional problems occur when there is tension among them.
</div>

<p><img src="assets/images/tension.png" alt="" />
<em><strong>Figure 2:</strong> The tensions between technology, product, organization, and business functions.</em></p>

<p>The main problem with this tension is that it can significantly slow things down due to <strong>miscommunication</strong> or other <strong>misalignments</strong>, lead to costly and <strong>detrimental decisions</strong> due to lack of information, introduce overwhelming and <strong>unnecessary complexity</strong>, and cause critical <strong>missed opportunities</strong>. This is a pressing issue that needs immediate attention. Too frequently, architecture sits on the sidelines, shouting principles and abstract ideals that everyone ignores.</p>

<p>By acting as a superglue, the architecture practice can effectively help reduce tension between technology, product, organization, and business functions, ensuring that critical conversations happen between these units. As Figure 3 illustrates, architecture should not try to be superglue by adding new constructs between these four elements but by bringing them closer together. I sometimes joke that architecture practice is a self-destructive function because by bringing these elements together, you remove the need for an architecture practice.</p>

<p><img src="assets/images/tension-architecture.png" alt="" />
<em><strong>Figure 3:</strong> Architects should be in the middle of reducing tensions between technology, product, organization, and business functions.</em></p>

<p>While staying close to technology (the engine room), architects must ensure that technology serves the needs of customers and the business, and that technical architecture is well-aligned with organizational design. At the same time, architects can help ensure that business, product, and organizational designs are well-informed about the state, risks, and opportunities of an organization’s technology to avoid creating impractical strategies, setting unrealistic goals, or missing opportunities. More specifically, there are several <strong>key risks</strong> that misalignment brings, and architects need to be aware of them:</p>

<ul>
  <li><strong>Building the wrong products</strong>: If technology implementation makes incorrect assumptions not aligned with product requirements, you might end up with a toaster when you really needed a coffee maker.</li>
  <li><strong>Wrong prioritization of activities</strong>: Without clear business and product metrics, we may build “interesting” products that do not create value for our customers and business. Picture making an app that tracks how often your cat blinks—fascinating, but not exactly a bestseller.</li>
  <li><strong>Unexpected delivery delays</strong>: Underestimating complexity, effort, and dependencies can lead to delays that make your project feel like it’s stuck in a time loop.</li>
  <li><strong>Duplication of effort</strong>: Without business or product harmonization needed to facilitate building shared components, you end up reinventing the wheel so often you could start a wheel shop.</li>
  <li><strong>Building too complex products</strong>: Creating an overly complex, configurable system to address all possible cases can lead to a labyrinthine solution when a simpler, more harmonized approach would have sufficed. It’s like using a Swiss Army knife when you just needed a spoon.</li>
  <li><strong>Overengineering</strong>: A lack of pushback to simplify products and a lack of understanding of technology can lead to using a complex and expensive messaging middleware capable of handling millions of messages per hour for a use case where you only have a few thousand messages per day. It’s like buying a monster truck to drive to the grocery store.</li>
  <li><strong>Building too simple, unscalable products</strong>: Assuming we will simplify and harmonize our processes, but in reality, needing to keep essential complexity and support many variations, can result in a system that’s as robust as a house of cards.</li>
  <li><strong>Building low-quality products</strong>: Unnecessary complexity and a lack of critical knowledge and expertise in the organization can lead to products that fall apart faster than a dollar-store umbrella in a hurricane.</li>
  <li><strong>Having complicated dependencies between teams that slow them down</strong>: Suboptimal organizational design and lack of awareness of all the links between systems and people can turn team coordination into a bureaucratic nightmare.</li>
  <li><strong>Creating fragile, unsustainable team structures</strong>: Having only one or two developers in some critical technology can make your team as resilient as a chocolate teapot.</li>
</ul>

<p>In summary, while architects stay close to the technology, they must ensure it’s working for the business and customers, not the other way around. By keeping everyone in the loop and aligned, architects help steer clear of the many pitfalls of misalignment and keep the organizational machine running smoothly.</p>

<p><br /></p>
<h2 id="superglue-abilities">Superglue Abilities</h2>

<p>Setting the architects’ goals to be “superglue” also requires some thought on developing architects as superglue. Borrowing from Gregor Hohpe’s view on architect development from his book <em>Software Architecture Elevator</em>, I share the view that our architects should stand on three legs (Figure 4):</p>

<ul>
  <li>Skills</li>
  <li>Impact</li>
  <li>Leadership</li>
</ul>

<p><img src="assets/images/superglue/architect-skills.png" alt="Architect Profile" />
<em><strong>Figure 4:</strong> Architect Profile: Skills + Impact + Leadership.</em></p>

<h3 id="skills">Skills</h3>

<p>Architects must have a solid skill set, possessing both knowledge and the ability to apply relevant knowledge in practice. These skills should include technical (e.g., cloud architecture or Kubernetes technology) as well as communication and influence skills.</p>

<p>A typical skillset of an architect includes:</p>
<ul>
  <li><strong>Hard (technical) skills</strong>, including extensive knowledge of both new technology and legacy technology stacks,</li>
  <li><strong>Soft skills</strong>,</li>
  <li><strong>Product development knowledge</strong>,</li>
  <li><strong>Business domain knowledge</strong>, and</li>
  <li><strong>Decision-making skills</strong>.</li>
</ul>

<p>The section <a href="skills">Skills</a> provides more details.</p>

<h3 id="impact">Impact</h3>

<p>Impact should be measured as a benefit for the business. Architects need to ensure that what they are doing profits the business. Architects that do not make an impact do not have a place in a for-profit business.</p>

<p>Examples of such impact may include:</p>
<ul>
  <li><strong>Aligning</strong> business, product, technology, and organizational strategies,</li>
  <li><strong>Process</strong> optimizations and improvements with real, measurable impact on the work of an organization,</li>
  <li><strong>Cost</strong> optimizations of systems based on data-informed decisions,</li>
  <li>Developing pragmatic <strong>technology strategies</strong>, helping businesses reach goals sustainably,</li>
  <li>Driving <strong>delivery of products</strong>, supporting teams to increase quality and speed of delivery,</li>
  <li>Supporting <strong>business innovation</strong>, bringing new pragmatic ideas aligned with business strategy and goals.</li>
</ul>

<p>The section <a href="impact">Impact</a> provides more details.</p>

<h3 id="leadership">Leadership</h3>

<p>Leadership acknowledges that experienced architects should do more than make architecture:</p>
<ul>
  <li>They are a <strong>role model for others</strong> in the company on both the <strong>technical</strong> and <strong>cultural</strong> front.</li>
  <li>Their <strong>technical influence</strong> may extend <strong>beyond your organization and reach the industry at large</strong>.</li>
  <li>They <strong>lead efforts</strong> that <strong>solve important problems</strong> at the engineering area level.</li>
  <li>They may <strong>contribute to the broader technical community</strong> through <strong>tech talks</strong>, <strong>education</strong>, <strong>publications</strong>, <strong>open-source projects</strong>, etc.</li>
  <li>They <strong>raise the bar of the engineering culture</strong> across the company.</li>
</ul>

<p><strong>Mentoring junior architects</strong> is the most crucial aspect of senior architects’ leadership. Feedback cycles in (software) architecture are inherently slow. Mentoring can save new architects many years of learning by doing and making mistakes.</p>

<p>The section <a href="leadership">Leadership</a> provides more details.</p>

<h3 id="balanced-development">Balanced Development</h3>

<p>Architects must have a <strong>minimal “length”</strong> of all of these “legs” to be successful (Figure 5). For instance, having skills and impact without leadership frequently leads to <strong>hitting a glass ceiling</strong>. Such architects plateau at an intermediate level and cannot direct the company to innovative or transformative solutions. Leadership without impact lacks foundation and may signal that you have become an <strong>ivory tower architect</strong> with a weak relation to reality. And having impact and leadership qualities but no skills leads to <strong>impractical decisions</strong> not informed by in-depth knowledge.</p>

<p>In summary, developing architects as “superglue” means fostering a balanced combination of skills, impact, and leadership. Just like a three-legged stool, if one leg is too short, the whole thing topples over—quite possibly spilling your coffee in the process.
<img src="assets/images/arch/architect-legs.png" alt="" />
<em><strong>Figure 5:</strong> Architects must have a minimal “length” of all “legs” to be successful.</em></p>

<h2 id="questions-to-consider">Questions to Consider</h2>

<p>Being a superglue architect means constantly developing and redefining your role to benefit a changing organization. Ask yourself the following questions:</p>

<ul>
  <li><em>How well do you think you currently embody the characteristics of a “superglue” architect? Which areas could you improve on to become more effective in this role?</em></li>
  <li><em>Reflect on your ability to connect the “business wheelhouse” and the “engine room” within your organization. How effectively do you bridge the gap between technical issues and business needs?</em></li>
  <li><em>How strong are your relationships with developer teams, local business stakeholders, and broader internal communities? How could you strengthen these connections?</em></li>
  <li><em>How much external visibility do you currently have? How could this be enhanced to promote the flow of ideas into and out of the organization?</em></li>
  <li><em>Can you identify specific instances of tension between your organization’s technology, product, organization, and business functions? What caused this tension, and how was it addressed?</em></li>
  <li><em>How could your current architecture aid in reducing tension between these functions?</em></li>
  <li><em>Have you witnessed the architecture sitting on the side, being ignored? If so, what steps can you take to actively involve architecture in decision-making processes?</em></li>
  <li><em>Are conversations between the technical, product, organizational, and business functions encouraged and facilitated within your organization? If not, how might they be initiated and supported?</em></li>
  <li><em>Considering the three legs of a successful architect (skills, impact, leadership), which are your strongest? Which might need more development?</em></li>
</ul>]]></content><author><name>by Željko Obrenović (obren.io)</name></author><summary type="html"><![CDATA[Architects in IT organizations should develop as “superglue,” people who hold architecture, technical details, business needs, and people together across a large organization or complex projects.]]></summary></entry></feed>